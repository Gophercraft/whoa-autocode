// DO NOT EDIT: generated by whoa_autocode

#include "db/ClientDefs.hpp"

bool LiquidTypeRec::Read(SFile* f, const char* stringBuffer) {
	uint32_t tempNameIndices[1];
	uint32_t tempTextureIndices[6];
	if (
		SFile::Read(f, &m_ID, sizeof(m_ID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Name_bitmask, sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Flags, sizeof(m_Flags), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_SoundBank, sizeof(m_SoundBank), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_SoundID, sizeof(m_SoundID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_SpellID, sizeof(m_SpellID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_MaxDarkenDepth, sizeof(m_MaxDarkenDepth), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_FogDarkenIntensity, sizeof(m_FogDarkenIntensity), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_AmbDarkenIntensity, sizeof(m_AmbDarkenIntensity), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_DirDarkenIntensity, sizeof(m_DirDarkenIntensity), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_LightID, sizeof(m_LightID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_ParticleScale, sizeof(m_ParticleScale), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_ParticleMovement, sizeof(m_ParticleMovement), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_ParticleTexSlots, sizeof(m_ParticleTexSlots), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_MaterialID, sizeof(m_MaterialID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempTextureIndices[0], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempTextureIndices[1], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempTextureIndices[2], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempTextureIndices[3], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempTextureIndices[4], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Texture_bitmask, sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Color[0], sizeof(m_Color[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Color[1], sizeof(m_Color[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Float[0], sizeof(m_Float[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Float[1], sizeof(m_Float[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Float[2], sizeof(m_Float[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Float[3], sizeof(m_Float[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Float[4], sizeof(m_Float[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Float[5], sizeof(m_Float[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Float[6], sizeof(m_Float[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Float[7], sizeof(m_Float[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Float[8], sizeof(m_Float[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Float[9], sizeof(m_Float[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Float[10], sizeof(m_Float[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Float[11], sizeof(m_Float[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Float[12], sizeof(m_Float[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Float[13], sizeof(m_Float[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Float[14], sizeof(m_Float[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Float[15], sizeof(m_Float[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Float[16], sizeof(m_Float[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Float[17], sizeof(m_Float[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Int[0], sizeof(m_Int[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Int[1], sizeof(m_Int[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Int[2], sizeof(m_Int[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Int[3], sizeof(m_Int[0]), nullptr, nullptr, nullptr) == 0
	)
	{
		ConsoleWrite("Error reading LiquidType", WARNING_COLOR);
		return false;
	}
	if (stringBuffer) {
		m_Name = &stringBuffer[tempNameIndices[0]];
		m_Texture[0] = &stringBuffer[tempTextureIndices[0]];
		m_Texture[1] = &stringBuffer[tempTextureIndices[1]];
		m_Texture[2] = &stringBuffer[tempTextureIndices[2]];
		m_Texture[3] = &stringBuffer[tempTextureIndices[3]];
		m_Texture[4] = &stringBuffer[tempTextureIndices[4]];
		m_Texture[5] = &stringBuffer[tempTextureIndices[5]];
		return true;
	}
		m_Texture[0] = "";
		m_Texture[1] = "";
		m_Texture[2] = "";
		m_Texture[3] = "";
		m_Texture[4] = "";
		m_Texture[5] = "";
	return true;
}

const char* LiquidTypeRec::GetFilename() {
	return "DBFilesClient\\LiquidType.dbc";
}
