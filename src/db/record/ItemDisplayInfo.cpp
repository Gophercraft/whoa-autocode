// DO NOT EDIT: generated by whoa_autocode

#include "db/ClientDefs.hpp"

bool ItemDisplayInfoRec::Read(SFile* f, const char* stringBuffer) {
	uint32_t tempModelNameIndices[2];
	uint32_t tempModelTextureIndices[2];
	uint32_t tempInventoryIconIndices[2];
	uint32_t tempTextureIndices[8];
	if (
		SFile::Read(f, &m_ID, sizeof(m_ID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempModelNameIndices[0], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_ModelName_bitmask, sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempModelTextureIndices[0], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_ModelTexture_bitmask, sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempInventoryIconIndices[0], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_InventoryIcon_bitmask, sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_GeosetGroup[0], sizeof(m_GeosetGroup[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_GeosetGroup[1], sizeof(m_GeosetGroup[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_GeosetGroup[2], sizeof(m_GeosetGroup[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Flags, sizeof(m_Flags), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_SpellVisualID, sizeof(m_SpellVisualID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_GroupSoundIndex, sizeof(m_GroupSoundIndex), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_HelmetGeosetVisID[0], sizeof(m_HelmetGeosetVisID[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_HelmetGeosetVisID[1], sizeof(m_HelmetGeosetVisID[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempTextureIndices[0], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempTextureIndices[1], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempTextureIndices[2], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempTextureIndices[3], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempTextureIndices[4], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempTextureIndices[5], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempTextureIndices[6], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Texture_bitmask, sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_ItemVisual, sizeof(m_ItemVisual), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_ParticleColorID, sizeof(m_ParticleColorID), nullptr, nullptr, nullptr) == 0
	)
	{
		ConsoleWrite("Error reading ItemDisplayInfo", WARNING_COLOR);
		return false;
	}
	if (stringBuffer) {
		m_ModelName[0] = &stringBuffer[tempModelNameIndices[0]];
		m_ModelName[1] = &stringBuffer[tempModelNameIndices[1]];
		m_ModelTexture[0] = &stringBuffer[tempModelTextureIndices[0]];
		m_ModelTexture[1] = &stringBuffer[tempModelTextureIndices[1]];
		m_InventoryIcon[0] = &stringBuffer[tempInventoryIconIndices[0]];
		m_InventoryIcon[1] = &stringBuffer[tempInventoryIconIndices[1]];
		m_Texture[0] = &stringBuffer[tempTextureIndices[0]];
		m_Texture[1] = &stringBuffer[tempTextureIndices[1]];
		m_Texture[2] = &stringBuffer[tempTextureIndices[2]];
		m_Texture[3] = &stringBuffer[tempTextureIndices[3]];
		m_Texture[4] = &stringBuffer[tempTextureIndices[4]];
		m_Texture[5] = &stringBuffer[tempTextureIndices[5]];
		m_Texture[6] = &stringBuffer[tempTextureIndices[6]];
		m_Texture[7] = &stringBuffer[tempTextureIndices[7]];
		return true;
	}
		m_ModelName[0] = "";
		m_ModelName[1] = "";
		m_ModelTexture[0] = "";
		m_ModelTexture[1] = "";
		m_InventoryIcon[0] = "";
		m_InventoryIcon[1] = "";
		m_Texture[0] = "";
		m_Texture[1] = "";
		m_Texture[2] = "";
		m_Texture[3] = "";
		m_Texture[4] = "";
		m_Texture[5] = "";
		m_Texture[6] = "";
		m_Texture[7] = "";
	return true;
}

const char* ItemDisplayInfoRec::GetFilename() {
	return "DBFilesClient\\ItemDisplayInfo.dbc";
}
