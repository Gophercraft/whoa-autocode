// DO NOT EDIT: generated by whoa_autocode

#include "db/ClientDefs.hpp"

bool SoundEntriesAdvancedRec::Read(SFile* f, const char* stringBuffer) {
	uint32_t tempNameIndices[1];
	if (
		SFile::Read(f, &m_ID, sizeof(m_ID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_SoundEntryID, sizeof(m_SoundEntryID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_InnerRadius2D, sizeof(m_InnerRadius2D), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_TimeA, sizeof(m_TimeA), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_TimeB, sizeof(m_TimeB), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_TimeC, sizeof(m_TimeC), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_TimeD, sizeof(m_TimeD), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_RandomOffsetRange, sizeof(m_RandomOffsetRange), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Usage, sizeof(m_Usage), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_TimeIntervalMin, sizeof(m_TimeIntervalMin), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_TimeIntervalMax, sizeof(m_TimeIntervalMax), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_VolumeSliderCategory, sizeof(m_VolumeSliderCategory), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_DuckToSFX, sizeof(m_DuckToSFX), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_DuckToMusic, sizeof(m_DuckToMusic), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_DuckToAmbience, sizeof(m_DuckToAmbience), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_InnerRadiusOfInfluence, sizeof(m_InnerRadiusOfInfluence), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_OuterRadiusOfInfluence, sizeof(m_OuterRadiusOfInfluence), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_TimeToDuck, sizeof(m_TimeToDuck), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_TimeToUnduck, sizeof(m_TimeToUnduck), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_InsideAngle, sizeof(m_InsideAngle), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_OutsideAngle, sizeof(m_OutsideAngle), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_OutsideVolume, sizeof(m_OutsideVolume), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_OuterRadius2D, sizeof(m_OuterRadius2D), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Name_bitmask, sizeof(uint32_t), nullptr, nullptr, nullptr) == 0
	)
	{
		ConsoleWrite("Error reading SoundEntriesAdvanced", WARNING_COLOR);
		return false;
	}
	if (stringBuffer) {
		m_Name = &stringBuffer[tempNameIndices[0]];
		return true;
	}
	return true;
}

const char* SoundEntriesAdvancedRec::GetFilename() {
	return "DBFilesClient\\SoundEntriesAdvanced.dbc";
}
