// DO NOT EDIT: generated by whoa_autocode

#include "db/ClientDefs.hpp"

bool GameObjectArtKitRec::Read(SFile* f, const char* stringBuffer) {
	uint32_t tempTextureVariationIndices[3];
	uint32_t tempAttachModelIndices[4];
	if (
		SFile::Read(f, &m_ID, sizeof(m_ID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempTextureVariationIndices[0], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempTextureVariationIndices[1], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_TextureVariation_bitmask, sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempAttachModelIndices[0], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempAttachModelIndices[1], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempAttachModelIndices[2], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_AttachModel_bitmask, sizeof(uint32_t), nullptr, nullptr, nullptr) == 0
	)
	{
		ConsoleWrite("Error reading GameObjectArtKit", WARNING_COLOR);
		return false;
	}
	if (stringBuffer) {
		m_TextureVariation[0] = &stringBuffer[tempTextureVariationIndices[0]];
		m_TextureVariation[1] = &stringBuffer[tempTextureVariationIndices[1]];
		m_TextureVariation[2] = &stringBuffer[tempTextureVariationIndices[2]];
		m_AttachModel[0] = &stringBuffer[tempAttachModelIndices[0]];
		m_AttachModel[1] = &stringBuffer[tempAttachModelIndices[1]];
		m_AttachModel[2] = &stringBuffer[tempAttachModelIndices[2]];
		m_AttachModel[3] = &stringBuffer[tempAttachModelIndices[3]];
		return true;
	}
		m_TextureVariation[0] = "";
		m_TextureVariation[1] = "";
		m_TextureVariation[2] = "";
		m_AttachModel[0] = "";
		m_AttachModel[1] = "";
		m_AttachModel[2] = "";
		m_AttachModel[3] = "";
	return true;
}

const char* GameObjectArtKitRec::GetFilename() {
	return "DBFilesClient\\GameObjectArtKit.dbc";
}
