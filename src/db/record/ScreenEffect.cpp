// DO NOT EDIT: generated by whoa_autocode

#include "db/ClientDefs.hpp"

bool ScreenEffectRec::Read(SFile* f, const char* stringBuffer) {
	uint32_t tempNameIndices[1];
	if (
		SFile::Read(f, &m_ID, sizeof(m_ID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Name_bitmask, sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Effect, sizeof(m_Effect), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Param[0], sizeof(m_Param[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Param[1], sizeof(m_Param[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Param[2], sizeof(m_Param[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Param[3], sizeof(m_Param[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_LightParamsID, sizeof(m_LightParamsID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_SoundAmbienceID, sizeof(m_SoundAmbienceID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_ZoneMusicID, sizeof(m_ZoneMusicID), nullptr, nullptr, nullptr) == 0
	)
	{
		ConsoleWrite("Error reading ScreenEffect", WARNING_COLOR);
		return false;
	}
	if (stringBuffer) {
		m_Name = &stringBuffer[tempNameIndices[0]];
		return true;
	}
	return true;
}

const char* ScreenEffectRec::GetFilename() {
	return "DBFilesClient\\ScreenEffect.dbc";
}
