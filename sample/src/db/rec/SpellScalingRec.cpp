// DO NOT EDIT: generated by whoa-autocode
#include "db/rec/SpellScalingRec.hpp"

const char* SpellScalingRec::GetFilename() {
    return "DBFilesClient\\SpellScaling.dbc";
}

int32_t SpellScalingRec::GetID() {
    return this->m_ID;
}

bool SpellScalingRec::Read(SFile* f, const char* stringBuffer) {
    if (
        !SFile::Read(f, &this->m_ID, sizeof(this->m_ID), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_castTimeMin, sizeof(this->m_castTimeMin), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_castTimeMax, sizeof(this->m_castTimeMax), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_castTimeMaxLevel, sizeof(this->m_castTimeMaxLevel), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_class, sizeof(this->m_class), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_coefficient[0], sizeof(m_coefficient[0]), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_coefficient[1], sizeof(m_coefficient[0]), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_coefficient[2], sizeof(m_coefficient[0]), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_variance[0], sizeof(m_variance[0]), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_variance[1], sizeof(m_variance[0]), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_variance[2], sizeof(m_variance[0]), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_comboPointsCoefficient[0], sizeof(m_comboPointsCoefficient[0]), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_comboPointsCoefficient[1], sizeof(m_comboPointsCoefficient[0]), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_comboPointsCoefficient[2], sizeof(m_comboPointsCoefficient[0]), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_nerfFactor, sizeof(this->m_nerfFactor), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_nerfMaxLevel, sizeof(this->m_nerfMaxLevel), nullptr, nullptr, nullptr)
    ) {
        return false;
    }

    return true;
}
