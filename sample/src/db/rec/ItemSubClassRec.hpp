// DO NOT EDIT: generated by whoa-autocode
#ifndef DB_ITEMSUBCLASS_REC_HPP
#define DB_ITEMSUBCLASS_REC_HPP

#include "util/SFile.hpp"
#include <cstdint>

struct ItemSubClassRec {
	static constexpr uint32_t columnCount = 44;
	static constexpr uint32_t rowSize = 176;
	static constexpr bool indexIsID = true;

	int32_t m_ClassID;
	int32_t m_SubClassID;
	int32_t m_PrerequisiteProficiency;
	int32_t m_PostrequisiteProficiency;
	int32_t m_Flags;
	int32_t m_DisplayFlags;
	int32_t m_WeaponParrySeq;
	int32_t m_WeaponReadySeq;
	int32_t m_WeaponAttackSeq;
	int32_t m_WeaponSwingSize;
	const char* m_DisplayName_lang;
	const char* m_VerboseName_lang;

	static const char* GetFilename() {
		return "DBFilesClient\\ItemSubClass.dbc";
	}

	bool Read(SFile* f, const char* stringBuffer) {
		uint32_t DisplayName_langOfs[16];
		uint32_t DisplayName_langMask;
		uint32_t VerboseName_langOfs[16];
		uint32_t VerboseName_langMask;

		if (
			!SFile::Read(f, &this->m_ClassID, sizeof(this->m_ClassID), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_SubClassID, sizeof(this->m_SubClassID), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_PrerequisiteProficiency, sizeof(this->m_PrerequisiteProficiency), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_PostrequisiteProficiency, sizeof(this->m_PostrequisiteProficiency), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_Flags, sizeof(this->m_Flags), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_DisplayFlags, sizeof(this->m_DisplayFlags), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_WeaponParrySeq, sizeof(this->m_WeaponParrySeq), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_WeaponReadySeq, sizeof(this->m_WeaponReadySeq), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_WeaponAttackSeq, sizeof(this->m_WeaponAttackSeq), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_WeaponSwingSize, sizeof(this->m_WeaponSwingSize), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &DisplayName_langOfs[0], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &DisplayName_langOfs[1], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &DisplayName_langOfs[2], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &DisplayName_langOfs[3], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &DisplayName_langOfs[4], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &DisplayName_langOfs[5], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &DisplayName_langOfs[6], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &DisplayName_langOfs[7], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &DisplayName_langOfs[8], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &DisplayName_langOfs[9], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &DisplayName_langOfs[10], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &DisplayName_langOfs[11], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &DisplayName_langOfs[12], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &DisplayName_langOfs[13], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &DisplayName_langOfs[14], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &DisplayName_langOfs[15], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &DisplayName_langMask, sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &VerboseName_langOfs[0], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &VerboseName_langOfs[1], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &VerboseName_langOfs[2], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &VerboseName_langOfs[3], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &VerboseName_langOfs[4], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &VerboseName_langOfs[5], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &VerboseName_langOfs[6], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &VerboseName_langOfs[7], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &VerboseName_langOfs[8], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &VerboseName_langOfs[9], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &VerboseName_langOfs[10], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &VerboseName_langOfs[11], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &VerboseName_langOfs[12], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &VerboseName_langOfs[13], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &VerboseName_langOfs[14], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &VerboseName_langOfs[15], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &VerboseName_langMask, sizeof(uint32_t), nullptr, nullptr, nullptr)
		) {
			return false;
		}

		if (stringBuffer) {
			this->m_DisplayName_lang = &stringBuffer[DisplayName_langOfs[CURRENT_LANGUAGE]];
			this->m_VerboseName_lang = &stringBuffer[VerboseName_langOfs[CURRENT_LANGUAGE]];
		} else {
			this->m_DisplayName_lang = "";
			this->m_VerboseName_lang = "";
		}

		return true;
	}
};

#endif