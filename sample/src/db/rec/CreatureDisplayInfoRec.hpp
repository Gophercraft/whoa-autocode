// DO NOT EDIT: generated by whoa-autocode
#ifndef DB_CREATUREDISPLAYINFO_REC_HPP
#define DB_CREATUREDISPLAYINFO_REC_HPP

#include "util/SFile.hpp"
#include <cstdint>

struct CreatureDisplayInfoRec {
	static constexpr uint32_t columnCount = 16;
	static constexpr uint32_t rowSize = 64;
	static constexpr bool indexIsID = false;

	int32_t m_ID;
	int32_t m_ModelID;
	int32_t m_SoundID;
	int32_t m_ExtendedDisplayInfoID;
	float m_CreatureModelScale;
	int32_t m_CreatureModelAlpha;
	const char* m_TextureVariation[3];
	const char* m_PortraitTextureName;
	int32_t m_SizeClass;
	int32_t m_BloodID;
	int32_t m_NPCSoundID;
	int32_t m_ParticleColorID;
	int32_t m_CreatureGeosetData;
	int32_t m_ObjectEffectPackageID;

	static const char* GetFilename() {
		return "DBFilesClient\\CreatureDisplayInfo.dbc";
	}

	bool Read(SFile* f, const char* stringBuffer) {
		uint32_t TextureVariationOfs[3];
		uint32_t PortraitTextureNameOfs;

		if (
			!SFile::Read(f, &this->m_ID, sizeof(this->m_ID), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_ModelID, sizeof(this->m_ModelID), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_SoundID, sizeof(this->m_SoundID), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_ExtendedDisplayInfoID, sizeof(this->m_ExtendedDisplayInfoID), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_CreatureModelScale, sizeof(this->m_CreatureModelScale), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_CreatureModelAlpha, sizeof(this->m_CreatureModelAlpha), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &TextureVariationOfs[0], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &TextureVariationOfs[1], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &TextureVariationOfs[2], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &PortraitTextureNameOfs, sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_SizeClass, sizeof(this->m_SizeClass), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_BloodID, sizeof(this->m_BloodID), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_NPCSoundID, sizeof(this->m_NPCSoundID), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_ParticleColorID, sizeof(this->m_ParticleColorID), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_CreatureGeosetData, sizeof(this->m_CreatureGeosetData), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_ObjectEffectPackageID, sizeof(this->m_ObjectEffectPackageID), nullptr, nullptr, nullptr)
		) {
			return false;
		}

		if (stringBuffer) {
			this->m_TextureVariation[0] = &stringBuffer[TextureVariationOfs[0]];
			this->m_TextureVariation[1] = &stringBuffer[TextureVariationOfs[1]];
			this->m_TextureVariation[2] = &stringBuffer[TextureVariationOfs[2]];
			this->m_PortraitTextureName = &stringBuffer[PortraitTextureNameOfs];
		} else {
			this->m_TextureVariation[0] = "";
			this->m_TextureVariation[1] = "";
			this->m_TextureVariation[2] = "";
			this->m_PortraitTextureName = "";
		}

		return true;
	}
};

#endif