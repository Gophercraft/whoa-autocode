// DO NOT EDIT: generated by whoa-autocode
#ifndef DB_CREATUREDISPLAYINFOEXTRA_REC_HPP
#define DB_CREATUREDISPLAYINFOEXTRA_REC_HPP

#include "util/SFile.hpp"
#include <cstdint>

struct CreatureDisplayInfoExtraRec {
	static constexpr uint32_t columnCount = 21;
	static constexpr uint32_t rowSize = 84;
	static constexpr bool indexIsID = false;

	int32_t m_ID;
	int32_t m_DisplayRaceID;
	int32_t m_DisplaySexID;
	int32_t m_SkinID;
	int32_t m_FaceID;
	int32_t m_HairStyleID;
	int32_t m_HairColorID;
	int32_t m_FacialHairID;
	int32_t m_NPCItemDisplay[11];
	int32_t m_Flags;
	const char* m_BakeName;

	static const char* GetFilename() {
		return "DBFilesClient\\CreatureDisplayInfoExtra.dbc";
	}

	bool Read(SFile* f, const char* stringBuffer) {
		uint32_t BakeNameOfs;

		if (
			!SFile::Read(f, &this->m_ID, sizeof(this->m_ID), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_DisplayRaceID, sizeof(this->m_DisplayRaceID), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_DisplaySexID, sizeof(this->m_DisplaySexID), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_SkinID, sizeof(this->m_SkinID), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_FaceID, sizeof(this->m_FaceID), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_HairStyleID, sizeof(this->m_HairStyleID), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_HairColorID, sizeof(this->m_HairColorID), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_FacialHairID, sizeof(this->m_FacialHairID), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_NPCItemDisplay[0], sizeof(m_NPCItemDisplay[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_NPCItemDisplay[1], sizeof(m_NPCItemDisplay[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_NPCItemDisplay[2], sizeof(m_NPCItemDisplay[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_NPCItemDisplay[3], sizeof(m_NPCItemDisplay[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_NPCItemDisplay[4], sizeof(m_NPCItemDisplay[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_NPCItemDisplay[5], sizeof(m_NPCItemDisplay[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_NPCItemDisplay[6], sizeof(m_NPCItemDisplay[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_NPCItemDisplay[7], sizeof(m_NPCItemDisplay[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_NPCItemDisplay[8], sizeof(m_NPCItemDisplay[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_NPCItemDisplay[9], sizeof(m_NPCItemDisplay[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_NPCItemDisplay[10], sizeof(m_NPCItemDisplay[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_Flags, sizeof(this->m_Flags), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &BakeNameOfs, sizeof(uint32_t), nullptr, nullptr, nullptr)
		) {
			return false;
		}

		if (stringBuffer) {
			this->m_BakeName = &stringBuffer[BakeNameOfs];
		} else {
			this->m_BakeName = "";
		}

		return true;
	}
};

#endif