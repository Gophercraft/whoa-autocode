// DO NOT EDIT: generated by whoa-autocode
#ifndef DB_WORLDMAPCONTINENT_REC_HPP
#define DB_WORLDMAPCONTINENT_REC_HPP

#include "util/SFile.hpp"
#include <cstdint>

struct WorldMapContinentRec {
	static constexpr uint32_t columnCount = 14;
	static constexpr uint32_t rowSize = 56;
	static constexpr bool indexIsID = false;

	int32_t m_ID;
	int32_t m_MapID;
	int32_t m_LeftBoundary;
	int32_t m_RightBoundary;
	int32_t m_TopBoundary;
	int32_t m_BottomBoundary;
	float m_ContinentOffset[2];
	float m_Scale;
	float m_TaxiMin[2];
	float m_TaxiMax[2];
	int32_t m_WorldMapID;

	static const char* GetFilename() {
		return "DBFilesClient\\WorldMapContinent.dbc";
	}

	bool Read(SFile* f, const char* stringBuffer) {
		if (
			!SFile::Read(f, &this->m_ID, sizeof(this->m_ID), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MapID, sizeof(this->m_MapID), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_LeftBoundary, sizeof(this->m_LeftBoundary), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_RightBoundary, sizeof(this->m_RightBoundary), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_TopBoundary, sizeof(this->m_TopBoundary), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_BottomBoundary, sizeof(this->m_BottomBoundary), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_ContinentOffset[0], sizeof(m_ContinentOffset[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_ContinentOffset[1], sizeof(m_ContinentOffset[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_Scale, sizeof(this->m_Scale), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_TaxiMin[0], sizeof(m_TaxiMin[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_TaxiMin[1], sizeof(m_TaxiMin[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_TaxiMax[0], sizeof(m_TaxiMax[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_TaxiMax[1], sizeof(m_TaxiMax[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_WorldMapID, sizeof(this->m_WorldMapID), nullptr, nullptr, nullptr)
		) {
			return false;
		}

		return true;
	}
};

#endif