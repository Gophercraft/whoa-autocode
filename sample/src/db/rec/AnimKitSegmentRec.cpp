// DO NOT EDIT: generated by whoa-autocode
#include "db/rec/AnimKitSegmentRec.hpp"

const char* AnimKitSegmentRec::GetFilename() {
    return "DBFilesClient\\AnimKitSegment.dbc";
}

bool AnimKitSegmentRec::Read(SFile* f, const char* stringBuffer) {
    if (
        !SFile::Read(f, &this->m_ID, sizeof(this->m_ID), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_ParentAnimKitID, sizeof(this->m_ParentAnimKitID), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_AnimID, sizeof(this->m_AnimID), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_AnimStartTime, sizeof(this->m_AnimStartTime), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_AnimKitConfigID, sizeof(this->m_AnimKitConfigID), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_StartCondition, sizeof(this->m_StartCondition), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_StartConditionParam, sizeof(this->m_StartConditionParam), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_StartConditionDelay, sizeof(this->m_StartConditionDelay), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_EndCondition, sizeof(this->m_EndCondition), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_EndConditionParam, sizeof(this->m_EndConditionParam), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_EndConditionDelay, sizeof(this->m_EndConditionDelay), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_Speed, sizeof(this->m_Speed), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_SegmentFlags, sizeof(this->m_SegmentFlags), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_ForcedVariation, sizeof(this->m_ForcedVariation), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_OverrideConfigFlags, sizeof(this->m_OverrideConfigFlags), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_LoopToSegmentIndex, sizeof(this->m_LoopToSegmentIndex), nullptr, nullptr, nullptr)
    ) {
        return false;
    }

    return true;
}
