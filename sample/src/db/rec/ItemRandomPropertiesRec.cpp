// DO NOT EDIT: generated by whoa-autocode
#include "db/rec/ItemRandomPropertiesRec.hpp"
#include "util/SFile.hpp"

const char* ItemRandomPropertiesRec::GetFilename() {
    return "DBFilesClient\\ItemRandomProperties.dbc";
}

uint32_t ItemRandomPropertiesRec::GetNumColumns() {
    return 24;
}

uint32_t ItemRandomPropertiesRec::GetRowSize() {
    return 96;
}

bool ItemRandomPropertiesRec::NeedIDAssigned() {
    return false;
}

int32_t ItemRandomPropertiesRec::GetID() {
    return this->m_ID;
}

void ItemRandomPropertiesRec::SetID(int32_t id) {
    this->m_ID = id;
}

bool ItemRandomPropertiesRec::Read(SFile* f, const char* stringBuffer) {
    uint32_t nameOfs;
    uint32_t name_langOfs[16];
    uint32_t name_langMask;

    if (
        !SFile::Read(f, &this->m_ID, sizeof(this->m_ID), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &nameOfs, sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_enchantment[0], sizeof(m_enchantment[0]), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_enchantment[1], sizeof(m_enchantment[0]), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_enchantment[2], sizeof(m_enchantment[0]), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_enchantment[3], sizeof(m_enchantment[0]), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_enchantment[4], sizeof(m_enchantment[0]), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &name_langOfs[0], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &name_langOfs[1], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &name_langOfs[2], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &name_langOfs[3], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &name_langOfs[4], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &name_langOfs[5], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &name_langOfs[6], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &name_langOfs[7], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &name_langOfs[8], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &name_langOfs[9], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &name_langOfs[10], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &name_langOfs[11], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &name_langOfs[12], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &name_langOfs[13], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &name_langOfs[14], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &name_langOfs[15], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &name_langMask, sizeof(uint32_t), nullptr, nullptr, nullptr)
    ) {
        return false;
    }

    if (stringBuffer) {
        this->m_name = &stringBuffer[nameOfs];
        this->m_name_lang = &stringBuffer[name_langOfs[CURRENT_LANGUAGE]];
    } else {
        this->m_name = "";
        this->m_name_lang = "";
    }

    return true;
}
