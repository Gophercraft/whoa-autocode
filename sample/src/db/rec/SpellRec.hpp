// DO NOT EDIT: generated by whoa-autocode
#ifndef DB_REC_SPELL_REC_HPP
#define DB_REC_SPELL_REC_HPP

#include <cstdint>
#include <storm/File.hpp>

class SpellRec {
    public:
    static constexpr uint32_t columnCount = 234;
    static constexpr uint32_t rowSize = 936;
    static constexpr bool indexIsID = false;

    int32_t m_ID;
    int32_t m_Category;
    int32_t m_DispelType;
    int32_t m_Mechanic;
    int32_t m_Attributes;
    int32_t m_AttributesEx;
    int32_t m_AttributesExB;
    int32_t m_AttributesExC;
    int32_t m_AttributesExD;
    int32_t m_AttributesExE;
    int32_t m_AttributesExF;
    int32_t m_AttributesExG;
    int32_t m_ShapeshiftMask[2];
    int32_t m_ShapeshiftExclude[2];
    int32_t m_Targets;
    int32_t m_TargetCreatureType;
    int32_t m_RequiresSpellFocus;
    int32_t m_FacingCasterFlags;
    int32_t m_CasterAuraState;
    int32_t m_TargetAuraState;
    int32_t m_ExcludeCasterAuraState;
    int32_t m_ExcludeTargetAuraState;
    int32_t m_CasterAuraSpell;
    int32_t m_TargetAuraSpell;
    int32_t m_ExcludeCasterAuraSpell;
    int32_t m_ExcludeTargetAuraSpell;
    int32_t m_CastingTimeIndex;
    int32_t m_RecoveryTime;
    int32_t m_CategoryRecoveryTime;
    int32_t m_InterruptFlags;
    int32_t m_AuraInterruptFlags;
    int32_t m_ChannelInterruptFlags;
    int32_t m_ProcTypeMask;
    int32_t m_ProcChance;
    int32_t m_ProcCharges;
    int32_t m_MaxLevel;
    int32_t m_BaseLevel;
    int32_t m_SpellLevel;
    int32_t m_DurationIndex;
    int32_t m_PowerType;
    int32_t m_ManaCost;
    int32_t m_ManaCostPerLevel;
    int32_t m_ManaPerSecond;
    int32_t m_ManaPerSecondPerLevel;
    int32_t m_RangeIndex;
    float m_Speed;
    int32_t m_ModalNextSpell;
    int32_t m_CumulativeAura;
    int32_t m_Totem[2];
    int32_t m_Reagent[8];
    int32_t m_ReagentCount[8];
    int32_t m_EquippedItemClass;
    int32_t m_EquippedItemSubclass;
    int32_t m_EquippedItemInvTypes;
    int32_t m_Effect[3];
    int32_t m_EffectDieSides[3];
    float m_EffectRealPointsPerLevel[3];
    int32_t m_EffectBasePoints[3];
    int32_t m_EffectMechanic[3];
    int32_t m_ImplicitTargetA[3];
    int32_t m_ImplicitTargetB[3];
    int32_t m_EffectRadiusIndex[3];
    int32_t m_EffectAura[3];
    int32_t m_EffectAuraPeriod[3];
    float m_EffectAmplitude[3];
    int32_t m_EffectChainTargets[3];
    int32_t m_EffectItemType[3];
    int32_t m_EffectMiscValue[3];
    int32_t m_EffectMiscValueB[3];
    int32_t m_EffectTriggerSpell[3];
    float m_EffectPointsPerCombo[3];
    int32_t m_EffectSpellClassMaskA[3];
    int32_t m_EffectSpellClassMaskB[3];
    int32_t m_EffectSpellClassMaskC[3];
    int32_t m_SpellVisualID[2];
    int32_t m_SpellIconID;
    int32_t m_ActiveIconID;
    int32_t m_SpellPriority;
    const char* m_Name_lang;
    const char* m_NameSubtext_lang;
    const char* m_Description_lang;
    const char* m_AuraDescription_lang;
    int32_t m_ManaCostPct;
    int32_t m_StartRecoveryCategory;
    int32_t m_StartRecoveryTime;
    int32_t m_MaxTargetLevel;
    int32_t m_SpellClassSet;
    int32_t m_SpellClassMask[3];
    int32_t m_MaxTargets;
    int32_t m_DefenseType;
    int32_t m_PreventionType;
    int32_t m_StanceBarOrder;
    float m_EffectChainAmplitude[3];
    int32_t m_MinFactionID;
    int32_t m_MinReputation;
    int32_t m_RequiredAuraVision;
    int32_t m_RequiredTotemCategoryID[2];
    int32_t m_RequiredAreasID;
    int32_t m_SchoolMask;
    int32_t m_RuneCostID;
    int32_t m_SpellMissileID;
    int32_t m_PowerDisplayID;
    float m_EffectBonusCoefficient[3];
    int32_t m_DescriptionVariablesID;
    int32_t m_Difficulty;

    static const char* GetFilename();
    bool Read(SFile* f, const char* stringBuffer);
};

#endif