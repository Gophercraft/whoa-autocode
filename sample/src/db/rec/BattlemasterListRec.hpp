// DO NOT EDIT: generated by whoa-autocode
#ifndef DB_BATTLEMASTERLIST_REC_HPP
#define DB_BATTLEMASTERLIST_REC_HPP

#include "util/SFile.hpp"
#include <cstdint>

struct BattlemasterListRec {
	static constexpr uint32_t columnCount = 32;
	static constexpr uint32_t rowSize = 128;
	static constexpr bool indexIsID = false;

	int32_t m_ID;
	int32_t m_MapID[8];
	int32_t m_InstanceType;
	int32_t m_GroupsAllowed;
	const char* m_Name_lang;
	int32_t m_MaxGroupSize;
	int32_t m_HolidayWorldState;
	int32_t m_MinLevel;
	int32_t m_MaxLevel;

	static const char* GetFilename() {
		return "DBFilesClient\\BattlemasterList.dbc";
	}

	bool Read(SFile* f, const char* stringBuffer) {
		uint32_t Name_langOfs[16];
		uint32_t Name_langMask;

		if (
			!SFile::Read(f, &this->m_ID, sizeof(this->m_ID), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MapID[0], sizeof(m_MapID[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MapID[1], sizeof(m_MapID[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MapID[2], sizeof(m_MapID[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MapID[3], sizeof(m_MapID[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MapID[4], sizeof(m_MapID[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MapID[5], sizeof(m_MapID[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MapID[6], sizeof(m_MapID[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MapID[7], sizeof(m_MapID[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_InstanceType, sizeof(this->m_InstanceType), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_GroupsAllowed, sizeof(this->m_GroupsAllowed), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &Name_langOfs[0], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &Name_langOfs[1], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &Name_langOfs[2], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &Name_langOfs[3], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &Name_langOfs[4], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &Name_langOfs[5], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &Name_langOfs[6], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &Name_langOfs[7], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &Name_langOfs[8], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &Name_langOfs[9], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &Name_langOfs[10], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &Name_langOfs[11], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &Name_langOfs[12], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &Name_langOfs[13], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &Name_langOfs[14], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &Name_langOfs[15], sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &Name_langMask, sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MaxGroupSize, sizeof(this->m_MaxGroupSize), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_HolidayWorldState, sizeof(this->m_HolidayWorldState), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MinLevel, sizeof(this->m_MinLevel), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MaxLevel, sizeof(this->m_MaxLevel), nullptr, nullptr, nullptr)
		) {
			return false;
		}

		if (stringBuffer) {
			this->m_Name_lang = &stringBuffer[Name_langOfs[CURRENT_LANGUAGE]];
		} else {
			this->m_Name_lang = "";
		}

		return true;
	}
};

#endif