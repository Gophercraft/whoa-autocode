// DO NOT EDIT: generated by whoa-autocode
#ifndef DB_SPELLCHAINEFFECTS_REC_HPP
#define DB_SPELLCHAINEFFECTS_REC_HPP

#include "util/SFile.hpp"
#include <cstdint>

struct SpellChainEffectsRec {
	static constexpr uint32_t columnCount = 48;
	static constexpr uint32_t rowSize = 177;
	static constexpr bool indexIsID = false;

	int32_t m_ID;
	float m_AvgSegLen;
	float m_Width;
	float m_NoiseScale;
	float m_TexCoordScale;
	int32_t m_SegDuration;
	int32_t m_SegDelay;
	const char* m_Texture;
	int32_t m_Flags;
	int32_t m_JointCount;
	float m_JointOffsetRadius;
	int32_t m_JointsPerMinorJoint;
	int32_t m_MinorJointsPerMajorJoint;
	float m_MinorJointScale;
	float m_MajorJointScale;
	float m_JointMoveSpeed;
	float m_JointSmoothness;
	float m_MinDurationBetweenJointJumps;
	float m_MaxDurationBetweenJointJumps;
	float m_WaveHeight;
	float m_WaveFreq;
	float m_WaveSpeed;
	float m_MinWaveAngle;
	float m_MaxWaveAngle;
	float m_MinWaveSpin;
	float m_MaxWaveSpin;
	float m_ArcHeight;
	float m_MinArcAngle;
	float m_MaxArcAngle;
	float m_MinArcSpin;
	float m_MaxArcSpin;
	float m_DelayBetweenEffects;
	float m_MinFlickerOnDuration;
	float m_MaxFlickerOnDuration;
	float m_MinFlickerOffDuration;
	float m_MaxFlickerOffDuration;
	float m_PulseSpeed;
	float m_PulseOnLength;
	float m_PulseFadeLength;
	int8_t m_Alpha;
	int8_t m_Red;
	int8_t m_Green;
	int8_t m_Blue;
	int8_t m_BlendMode;
	const char* m_Combo;
	int32_t m_RenderLayer;
	float m_TextureLength;
	float m_WavePhase;

	static const char* GetFilename() {
		return "DBFilesClient\\SpellChainEffects.dbc";
	}

	bool Read(SFile* f, const char* stringBuffer) {
		uint32_t TextureOfs;
		uint32_t ComboOfs;

		if (
			!SFile::Read(f, &this->m_ID, sizeof(this->m_ID), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_AvgSegLen, sizeof(this->m_AvgSegLen), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_Width, sizeof(this->m_Width), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_NoiseScale, sizeof(this->m_NoiseScale), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_TexCoordScale, sizeof(this->m_TexCoordScale), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_SegDuration, sizeof(this->m_SegDuration), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_SegDelay, sizeof(this->m_SegDelay), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &TextureOfs, sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_Flags, sizeof(this->m_Flags), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_JointCount, sizeof(this->m_JointCount), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_JointOffsetRadius, sizeof(this->m_JointOffsetRadius), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_JointsPerMinorJoint, sizeof(this->m_JointsPerMinorJoint), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MinorJointsPerMajorJoint, sizeof(this->m_MinorJointsPerMajorJoint), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MinorJointScale, sizeof(this->m_MinorJointScale), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MajorJointScale, sizeof(this->m_MajorJointScale), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_JointMoveSpeed, sizeof(this->m_JointMoveSpeed), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_JointSmoothness, sizeof(this->m_JointSmoothness), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MinDurationBetweenJointJumps, sizeof(this->m_MinDurationBetweenJointJumps), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MaxDurationBetweenJointJumps, sizeof(this->m_MaxDurationBetweenJointJumps), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_WaveHeight, sizeof(this->m_WaveHeight), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_WaveFreq, sizeof(this->m_WaveFreq), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_WaveSpeed, sizeof(this->m_WaveSpeed), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MinWaveAngle, sizeof(this->m_MinWaveAngle), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MaxWaveAngle, sizeof(this->m_MaxWaveAngle), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MinWaveSpin, sizeof(this->m_MinWaveSpin), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MaxWaveSpin, sizeof(this->m_MaxWaveSpin), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_ArcHeight, sizeof(this->m_ArcHeight), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MinArcAngle, sizeof(this->m_MinArcAngle), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MaxArcAngle, sizeof(this->m_MaxArcAngle), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MinArcSpin, sizeof(this->m_MinArcSpin), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MaxArcSpin, sizeof(this->m_MaxArcSpin), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_DelayBetweenEffects, sizeof(this->m_DelayBetweenEffects), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MinFlickerOnDuration, sizeof(this->m_MinFlickerOnDuration), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MaxFlickerOnDuration, sizeof(this->m_MaxFlickerOnDuration), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MinFlickerOffDuration, sizeof(this->m_MinFlickerOffDuration), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MaxFlickerOffDuration, sizeof(this->m_MaxFlickerOffDuration), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_PulseSpeed, sizeof(this->m_PulseSpeed), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_PulseOnLength, sizeof(this->m_PulseOnLength), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_PulseFadeLength, sizeof(this->m_PulseFadeLength), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_Alpha, sizeof(this->m_Alpha), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_Red, sizeof(this->m_Red), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_Green, sizeof(this->m_Green), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_Blue, sizeof(this->m_Blue), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_BlendMode, sizeof(this->m_BlendMode), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &ComboOfs, sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_RenderLayer, sizeof(this->m_RenderLayer), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_TextureLength, sizeof(this->m_TextureLength), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_WavePhase, sizeof(this->m_WavePhase), nullptr, nullptr, nullptr)
		) {
			return false;
		}

		if (stringBuffer) {
			this->m_Texture = &stringBuffer[TextureOfs];
			this->m_Combo = &stringBuffer[ComboOfs];
		} else {
			this->m_Texture = "";
			this->m_Combo = "";
		}

		return true;
	}
};

#endif