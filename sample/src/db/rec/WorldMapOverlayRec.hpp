// DO NOT EDIT: generated by whoa-autocode
#ifndef DB_WORLDMAPOVERLAY_REC_HPP
#define DB_WORLDMAPOVERLAY_REC_HPP

#include "util/SFile.hpp"
#include <cstdint>

struct WorldMapOverlayRec {
	static constexpr uint32_t columnCount = 17;
	static constexpr uint32_t rowSize = 68;
	static constexpr bool indexIsID = false;

	int32_t m_ID;
	int32_t m_MapAreaID;
	int32_t m_AreaID[4];
	int32_t m_MapPointX;
	int32_t m_MapPointY;
	const char* m_TextureName;
	int32_t m_TextureWidth;
	int32_t m_TextureHeight;
	int32_t m_OffsetX;
	int32_t m_OffsetY;
	int32_t m_HitRectTop;
	int32_t m_HitRectLeft;
	int32_t m_HitRectBottom;
	int32_t m_HitRectRight;

	static const char* GetFilename() {
		return "DBFilesClient\\WorldMapOverlay.dbc";
	}

	bool Read(SFile* f, const char* stringBuffer) {
		uint32_t TextureNameOfs;

		if (
			!SFile::Read(f, &this->m_ID, sizeof(this->m_ID), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MapAreaID, sizeof(this->m_MapAreaID), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_AreaID[0], sizeof(m_AreaID[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_AreaID[1], sizeof(m_AreaID[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_AreaID[2], sizeof(m_AreaID[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_AreaID[3], sizeof(m_AreaID[0]), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MapPointX, sizeof(this->m_MapPointX), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_MapPointY, sizeof(this->m_MapPointY), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &TextureNameOfs, sizeof(uint32_t), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_TextureWidth, sizeof(this->m_TextureWidth), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_TextureHeight, sizeof(this->m_TextureHeight), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_OffsetX, sizeof(this->m_OffsetX), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_OffsetY, sizeof(this->m_OffsetY), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_HitRectTop, sizeof(this->m_HitRectTop), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_HitRectLeft, sizeof(this->m_HitRectLeft), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_HitRectBottom, sizeof(this->m_HitRectBottom), nullptr, nullptr, nullptr)
			|| !SFile::Read(f, &this->m_HitRectRight, sizeof(this->m_HitRectRight), nullptr, nullptr, nullptr)
		) {
			return false;
		}

		if (stringBuffer) {
			this->m_TextureName = &stringBuffer[TextureNameOfs];
		} else {
			this->m_TextureName = "";
		}

		return true;
	}
};

#endif