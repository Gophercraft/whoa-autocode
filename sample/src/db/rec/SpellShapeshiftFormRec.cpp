// DO NOT EDIT: generated by whoa-autocode
#include "db/rec/SpellShapeshiftFormRec.hpp"
#include "util/SFile.hpp"

const char* SpellShapeshiftFormRec::GetFilename() {
    return "DBFilesClient\\SpellShapeshiftForm.dbc";
}

uint32_t SpellShapeshiftFormRec::GetNumColumns() {
    return 35;
}

uint32_t SpellShapeshiftFormRec::GetRowSize() {
    return 140;
}

bool SpellShapeshiftFormRec::NeedIDAssigned() {
    return false;
}

int32_t SpellShapeshiftFormRec::GetID() {
    return this->m_ID;
}

void SpellShapeshiftFormRec::SetID(int32_t id) {
    this->m_ID = id;
}

bool SpellShapeshiftFormRec::Read(SFile* f, const char* stringBuffer) {
    uint32_t nameOfs[16];
    uint32_t nameMask;

    if (
        !SFile::Read(f, &this->m_ID, sizeof(this->m_ID), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_bonusActionBar, sizeof(this->m_bonusActionBar), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &nameOfs[0], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &nameOfs[1], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &nameOfs[2], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &nameOfs[3], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &nameOfs[4], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &nameOfs[5], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &nameOfs[6], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &nameOfs[7], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &nameOfs[8], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &nameOfs[9], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &nameOfs[10], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &nameOfs[11], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &nameOfs[12], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &nameOfs[13], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &nameOfs[14], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &nameOfs[15], sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &nameMask, sizeof(uint32_t), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_flags, sizeof(this->m_flags), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_creatureType, sizeof(this->m_creatureType), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_attackIconID, sizeof(this->m_attackIconID), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_combatRoundTime, sizeof(this->m_combatRoundTime), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_creatureDisplayID[0], sizeof(m_creatureDisplayID[0]), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_creatureDisplayID[1], sizeof(m_creatureDisplayID[0]), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_creatureDisplayID[2], sizeof(m_creatureDisplayID[0]), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_creatureDisplayID[3], sizeof(m_creatureDisplayID[0]), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_presetSpellID[0], sizeof(m_presetSpellID[0]), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_presetSpellID[1], sizeof(m_presetSpellID[0]), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_presetSpellID[2], sizeof(m_presetSpellID[0]), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_presetSpellID[3], sizeof(m_presetSpellID[0]), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_presetSpellID[4], sizeof(m_presetSpellID[0]), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_presetSpellID[5], sizeof(m_presetSpellID[0]), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_presetSpellID[6], sizeof(m_presetSpellID[0]), nullptr, nullptr, nullptr)
        || !SFile::Read(f, &this->m_presetSpellID[7], sizeof(m_presetSpellID[0]), nullptr, nullptr, nullptr)
    ) {
        return false;
    }

    if (stringBuffer) {
        this->m_name = &stringBuffer[nameOfs[CURRENT_LANGUAGE]];
    } else {
        this->m_name = "";
    }

    return true;
}
