// DO NOT EDIT: generated by whoa_autocode
#ifndef DB_CLIENT_DEFS_HPP
#define DB_CLIENT_DEFS_HPP

#include "client/Console.hpp"
#include "util/SFile.hpp"

struct AchievementRec {
	static constexpr uint32_t NumColumns = 62;
	static constexpr uint32_t RowSize = 248;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Faction;
	int32_t m_Instance_ID;
	int32_t m_Supercedes;
	const char* m_Title_lang[16];
	uint32_t m_Title_lang_bitmask;
	const char* m_Description_lang[16];
	uint32_t m_Description_lang_bitmask;
	int32_t m_Category;
	int32_t m_Points;
	int32_t m_Ui_order;
	int32_t m_Flags;
	int32_t m_IconID;
	const char* m_Reward_lang[16];
	uint32_t m_Reward_lang_bitmask;
	int32_t m_Minimum_criteria;
	int32_t m_Shares_criteria;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct Achievement_CategoryRec {
	static constexpr uint32_t NumColumns = 20;
	static constexpr uint32_t RowSize = 80;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Parent;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	int32_t m_Ui_order;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct Achievement_CriteriaRec {
	static constexpr uint32_t NumColumns = 31;
	static constexpr uint32_t RowSize = 124;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Achievement_ID;
	int32_t m_Type;
	int32_t m_Asset_ID;
	int32_t m_Quantity;
	int32_t m_Start_event;
	int32_t m_Start_asset;
	int32_t m_Fail_event;
	int32_t m_Fail_asset;
	const char* m_Description_lang[16];
	uint32_t m_Description_lang_bitmask;
	int32_t m_Flags;
	int32_t m_Timer_start_event;
	int32_t m_Timer_asset_ID;
	int32_t m_Timer_time;
	int32_t m_Ui_order;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct AnimKitRec {
	static constexpr uint32_t NumColumns = 3;
	static constexpr uint32_t RowSize = 12;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_OneShotDuration;
	int32_t m_OneShotStopAnimKitID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct AnimKitBoneSetRec {
	static constexpr uint32_t NumColumns = 6;
	static constexpr uint32_t RowSize = 24;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name;
	int32_t m_BoneDataID;
	int32_t m_ParentAnimKitBoneSetID;
	int32_t m_ExtraBoneCount;
	int32_t m_AltAnimKitBoneSetID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct AnimKitBoneSetAliasRec {
	static constexpr uint32_t NumColumns = 3;
	static constexpr uint32_t RowSize = 12;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_BoneDataID;
	int32_t m_AnimKitBoneSetID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct AnimKitConfigRec {
	static constexpr uint32_t NumColumns = 2;
	static constexpr uint32_t RowSize = 8;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ConfigFlags;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct AnimKitConfigBoneSetRec {
	static constexpr uint32_t NumColumns = 4;
	static constexpr uint32_t RowSize = 16;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ParentAnimKitConfigID;
	int32_t m_AnimKitBoneSetID;
	int32_t m_AnimKitPriorityID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct AnimKitPriorityRec {
	static constexpr uint32_t NumColumns = 2;
	static constexpr uint32_t RowSize = 8;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Priority;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct AnimKitSegmentRec {
	static constexpr uint32_t NumColumns = 16;
	static constexpr uint32_t RowSize = 64;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ParentAnimKitID;
	int32_t m_AnimID;
	int32_t m_AnimStartTime;
	int32_t m_AnimKitConfigID;
	int32_t m_StartCondition;
	int32_t m_StartConditionParam;
	int32_t m_StartConditionDelay;
	int32_t m_EndCondition;
	int32_t m_EndConditionParam;
	int32_t m_EndConditionDelay;
	float m_Speed;
	int32_t m_SegmentFlags;
	int32_t m_ForcedVariation;
	int32_t m_OverrideConfigFlags;
	int32_t m_LoopToSegmentIndex;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct AnimReplacementRec {
	static constexpr uint32_t NumColumns = 4;
	static constexpr uint32_t RowSize = 16;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_SrcAnimID;
	int32_t m_DstAnimID;
	int32_t m_ParentAnimReplacementSetID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct AnimReplacementSetRec {
	static constexpr uint32_t NumColumns = 2;
	static constexpr uint32_t RowSize = 8;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ExecOrder;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct AnimationDataRec {
	static constexpr uint32_t NumColumns = 8;
	static constexpr uint32_t RowSize = 32;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name;
	int32_t m_Weaponflags;
	int32_t m_Bodyflags;
	int32_t m_Flags;
	int32_t m_Fallback;
	int32_t m_BehaviorID;
	int32_t m_BehaviorTier;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct AreaAssignmentRec {
	static constexpr uint32_t NumColumns = 5;
	static constexpr uint32_t RowSize = 20;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_MapID;
	int32_t m_AreaID;
	int32_t m_ChunkX;
	int32_t m_ChunkY;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct AreaGroupRec {
	static constexpr uint32_t NumColumns = 8;
	static constexpr uint32_t RowSize = 32;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_AreaID[6];
	int32_t m_NextAreaID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct AreaPOIRec {
	static constexpr uint32_t NumColumns = 54;
	static constexpr uint32_t RowSize = 216;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Importance;
	int32_t m_Icon[9];
	int32_t m_FactionID;
	float m_Pos[3];
	int32_t m_ContinentID;
	int32_t m_Flags;
	int32_t m_AreaID;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	const char* m_Description_lang[16];
	uint32_t m_Description_lang_bitmask;
	int32_t m_WorldStateID;
	int32_t m_WorldMapLink;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct AreaTableRec {
	static constexpr uint32_t NumColumns = 36;
	static constexpr uint32_t RowSize = 144;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ContinentID;
	int32_t m_ParentAreaID;
	int32_t m_AreaBit;
	int32_t m_Flags;
	int32_t m_SoundProviderPref;
	int32_t m_SoundProviderPrefUnderwater;
	int32_t m_AmbienceID;
	int32_t m_ZoneMusic;
	int32_t m_IntroSound;
	int32_t m_ExplorationLevel;
	const char* m_AreaName_lang[16];
	uint32_t m_AreaName_lang_bitmask;
	int32_t m_FactionGroupMask;
	int32_t m_LiquidTypeID[4];
	float m_MinElevation;
	float m_Ambient_multiplier;
	int32_t m_LightID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct AreaTriggerRec {
	static constexpr uint32_t NumColumns = 10;
	static constexpr uint32_t RowSize = 40;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ContinentID;
	float m_Pos[3];
	float m_Radius;
	float m_Box_length;
	float m_Box_width;
	float m_Box_height;
	float m_Box_yaw;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ArmorLocationRec {
	static constexpr uint32_t NumColumns = 6;
	static constexpr uint32_t RowSize = 24;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	float m_Clothmodifier;
	float m_Leathermodifier;
	float m_Chainmodifier;
	float m_Platemodifier;
	float m_Modifier;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct AttackAnimKitsRec {
	static constexpr uint32_t NumColumns = 5;
	static constexpr uint32_t RowSize = 20;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ItemSubclassID;
	int32_t m_AnimTypeID;
	int32_t m_AnimFrequency;
	int32_t m_WhichHand;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct AttackAnimTypesRec {
	static constexpr uint32_t NumColumns = 2;
	static constexpr uint32_t RowSize = 8;
	static constexpr bool IndexIsID = true;

	int32_t m_AnimID;
	const char* m_AnimName;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct AuctionHouseRec {
	static constexpr uint32_t NumColumns = 21;
	static constexpr uint32_t RowSize = 84;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_FactionID;
	int32_t m_DepositRate;
	int32_t m_ConsignmentRate;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct BankBagSlotPricesRec {
	static constexpr uint32_t NumColumns = 2;
	static constexpr uint32_t RowSize = 8;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Cost;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct BannedAddonsRec {
	static constexpr uint32_t NumColumns = 11;
	static constexpr uint32_t RowSize = 44;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_NameMD5[4];
	int32_t m_VersionMD5[4];
	int32_t m_LastModified;
	int32_t m_Flags;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct BarberShopStyleRec {
	static constexpr uint32_t NumColumns = 40;
	static constexpr uint32_t RowSize = 160;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Type;
	const char* m_DisplayName_lang[16];
	uint32_t m_DisplayName_lang_bitmask;
	const char* m_Description_lang[16];
	uint32_t m_Description_lang_bitmask;
	float m_Cost_Modifier;
	int32_t m_Race;
	int32_t m_Sex;
	int32_t m_Data;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct BattlemasterListRec {
	static constexpr uint32_t NumColumns = 32;
	static constexpr uint32_t RowSize = 128;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_MapID[8];
	int32_t m_InstanceType;
	int32_t m_GroupsAllowed;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	int32_t m_MaxGroupSize;
	int32_t m_HolidayWorldState;
	int32_t m_MinLevel;
	int32_t m_MaxLevel;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct CameraModeRec {
	static constexpr uint32_t NumColumns = 17;
	static constexpr uint32_t RowSize = 68;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name;
	int32_t m_Type;
	int32_t m_Flags;
	float m_PositionOffset[3];
	float m_TargetOffset[3];
	float m_PositionSmoothing;
	float m_RotationSmoothing;
	float m_FieldOfView;
	int32_t m_LockedPositionOffsetBase;
	int32_t m_LockedPositionOffsetDirection;
	int32_t m_LockedTargetOffsetBase;
	int32_t m_LockedTargetOffsetDirection;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct CameraShakesRec {
	static constexpr uint32_t NumColumns = 8;
	static constexpr uint32_t RowSize = 32;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ShakeType;
	int32_t m_Direction;
	float m_Amplitude;
	float m_Frequency;
	float m_Duration;
	float m_Phase;
	float m_Coefficient;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct Cfg_CategoriesRec {
	static constexpr uint32_t NumColumns = 21;
	static constexpr uint32_t RowSize = 84;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_LocaleMask;
	int32_t m_Create_charsetMask;
	int32_t m_Flags;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct Cfg_ConfigsRec {
	static constexpr uint32_t NumColumns = 4;
	static constexpr uint32_t RowSize = 16;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_RealmType;
	int32_t m_PlayerKillingAllowed;
	int32_t m_Roleplaying;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct CharBaseInfoRec {
	static constexpr uint32_t NumColumns = 2;
	static constexpr uint32_t RowSize = 2;
	static constexpr bool IndexIsID = true;

	int8_t m_RaceID;
	int8_t m_ClassID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct CharHairGeosetsRec {
	static constexpr uint32_t NumColumns = 6;
	static constexpr uint32_t RowSize = 24;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_RaceID;
	int32_t m_SexID;
	int32_t m_VariationID;
	int32_t m_GeosetID;
	int32_t m_Showscalp;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct CharHairTexturesRec {
	static constexpr uint32_t NumColumns = 8;
	static constexpr uint32_t RowSize = 32;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Field_0_5_3_3368_001_race;
	int32_t m_Field_0_5_3_3368_002_gender;
	int32_t m_Field_0_5_3_3368_003;
	int32_t m_Field_0_5_3_3368_004_mayberacemask;
	int32_t m_Field_0_5_3_3368_005_the_x_in_hair_xy_blp;
	int32_t m_Field_0_5_3_3368_006;
	int32_t m_Field_0_5_3_3368_007;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct CharSectionsRec {
	static constexpr uint32_t NumColumns = 10;
	static constexpr uint32_t RowSize = 40;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_RaceID;
	int32_t m_SexID;
	int32_t m_BaseSection;
	const char* m_TextureName[3];
	int32_t m_Flags;
	int32_t m_VariationIndex;
	int32_t m_ColorIndex;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct CharStartOutfitRec {
	static constexpr uint32_t NumColumns = 77;
	static constexpr uint32_t RowSize = 296;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int8_t m_RaceID;
	int8_t m_ClassID;
	int8_t m_SexID;
	int8_t m_OutfitID;
	int32_t m_ItemID[24];
	int32_t m_DisplayItemID[24];
	int32_t m_InventoryType[24];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct CharTitlesRec {
	static constexpr uint32_t NumColumns = 37;
	static constexpr uint32_t RowSize = 148;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Condition_ID;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	const char* m_Name1_lang[16];
	uint32_t m_Name1_lang_bitmask;
	int32_t m_Mask_ID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct CharVariationsRec {
	static constexpr uint32_t NumColumns = 6;
	static constexpr uint32_t RowSize = 24;
	static constexpr bool IndexIsID = true;

	int32_t m_RaceID;
	int32_t m_SexID;
	int32_t m_TextureHoldLayer[4];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct CharacterFacialHairStylesRec {
	static constexpr uint32_t NumColumns = 8;
	static constexpr uint32_t RowSize = 32;
	static constexpr bool IndexIsID = true;

	int32_t m_RaceID;
	int32_t m_SexID;
	int32_t m_VariationID;
	int32_t m_Geoset[5];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ChatChannelsRec {
	static constexpr uint32_t NumColumns = 37;
	static constexpr uint32_t RowSize = 148;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Flags;
	int32_t m_FactionGroup;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	const char* m_Shortcut_lang[16];
	uint32_t m_Shortcut_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ChatProfanityRec {
	static constexpr uint32_t NumColumns = 3;
	static constexpr uint32_t RowSize = 12;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Text;
	int32_t m_Language;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ChrClassesRec {
	static constexpr uint32_t NumColumns = 60;
	static constexpr uint32_t RowSize = 240;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_DamageBonusStat;
	int32_t m_DisplayPower;
	const char* m_PetNameToken;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	const char* m_Name_female_lang[16];
	uint32_t m_Name_female_lang_bitmask;
	const char* m_Name_male_lang[16];
	uint32_t m_Name_male_lang_bitmask;
	const char* m_Filename;
	int32_t m_SpellClassSet;
	int32_t m_Flags;
	int32_t m_CinematicSequenceID;
	int32_t m_Required_expansion;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ChrRacesRec {
	static constexpr uint32_t NumColumns = 69;
	static constexpr uint32_t RowSize = 276;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Flags;
	int32_t m_FactionID;
	int32_t m_ExplorationSoundID;
	int32_t m_MaleDisplayID;
	int32_t m_FemaleDisplayID;
	const char* m_ClientPrefix;
	int32_t m_BaseLanguage;
	int32_t m_CreatureType;
	int32_t m_ResSicknessSpellID;
	int32_t m_SplashSoundID;
	const char* m_ClientFileString;
	int32_t m_CinematicSequenceID;
	int32_t m_Alliance;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	const char* m_Name_female_lang[16];
	uint32_t m_Name_female_lang_bitmask;
	const char* m_Name_male_lang[16];
	uint32_t m_Name_male_lang_bitmask;
	const char* m_FacialHairCustomization[2];
	const char* m_HairCustomization;
	int32_t m_Required_expansion;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct CinematicCameraRec {
	static constexpr uint32_t NumColumns = 7;
	static constexpr uint32_t RowSize = 28;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Model;
	int32_t m_SoundID;
	float m_Origin[3];
	float m_OriginFacing;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct CinematicSequencesRec {
	static constexpr uint32_t NumColumns = 10;
	static constexpr uint32_t RowSize = 40;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_SoundID;
	int32_t m_Camera[8];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct CreatureDisplayInfoRec {
	static constexpr uint32_t NumColumns = 16;
	static constexpr uint32_t RowSize = 64;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ModelID;
	int32_t m_SoundID;
	int32_t m_ExtendedDisplayInfoID;
	float m_CreatureModelScale;
	int32_t m_CreatureModelAlpha;
	const char* m_TextureVariation[3];
	const char* m_PortraitTextureName;
	int32_t m_SizeClass;
	int32_t m_BloodID;
	int32_t m_NPCSoundID;
	int32_t m_ParticleColorID;
	int32_t m_CreatureGeosetData;
	int32_t m_ObjectEffectPackageID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct CreatureDisplayInfoExtraRec {
	static constexpr uint32_t NumColumns = 21;
	static constexpr uint32_t RowSize = 84;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_DisplayRaceID;
	int32_t m_DisplaySexID;
	int32_t m_SkinID;
	int32_t m_FaceID;
	int32_t m_HairStyleID;
	int32_t m_HairColorID;
	int32_t m_FacialHairID;
	int32_t m_NPCItemDisplay[11];
	int32_t m_Flags;
	const char* m_BakeName;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct CreatureFamilyRec {
	static constexpr uint32_t NumColumns = 28;
	static constexpr uint32_t RowSize = 112;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	float m_MinScale;
	int32_t m_MinScaleLevel;
	float m_MaxScale;
	int32_t m_MaxScaleLevel;
	int32_t m_SkillLine[2];
	int32_t m_PetFoodMask;
	int32_t m_PetTalentType;
	int32_t m_CategoryEnumID;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	const char* m_IconFile;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct CreatureModelDataRec {
	static constexpr uint32_t NumColumns = 28;
	static constexpr uint32_t RowSize = 112;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Flags;
	const char* m_ModelName;
	int32_t m_SizeClass;
	float m_ModelScale;
	int32_t m_BloodID;
	int32_t m_FootprintTextureID;
	float m_FootprintTextureLength;
	float m_FootprintTextureWidth;
	float m_FootprintParticleScale;
	int32_t m_FoleyMaterialID;
	int32_t m_FootstepShakeSize;
	int32_t m_DeathThudShakeSize;
	int32_t m_SoundID;
	float m_CollisionWidth;
	float m_CollisionHeight;
	float m_MountHeight;
	float m_GeoBoxMinX;
	float m_GeoBoxMinY;
	float m_GeoBoxMinZ;
	float m_GeoBoxMaxX;
	float m_GeoBoxMaxY;
	float m_GeoBoxMaxZ;
	float m_WorldEffectScale;
	float m_AttachedEffectScale;
	float m_MissileCollisionRadius;
	float m_MissileCollisionPush;
	float m_MissileCollisionRaise;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct CreatureMovementInfoRec {
	static constexpr uint32_t NumColumns = 2;
	static constexpr uint32_t RowSize = 8;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	float m_SmoothFacingChaseRate;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct CreatureSoundDataRec {
	static constexpr uint32_t NumColumns = 38;
	static constexpr uint32_t RowSize = 152;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_SoundExertionID;
	int32_t m_SoundExertionCriticalID;
	int32_t m_SoundInjuryID;
	int32_t m_SoundInjuryCriticalID;
	int32_t m_SoundInjuryCrushingBlowID;
	int32_t m_SoundDeathID;
	int32_t m_SoundStunID;
	int32_t m_SoundStandID;
	int32_t m_SoundFootstepID;
	int32_t m_SoundAggroID;
	int32_t m_SoundWingFlapID;
	int32_t m_SoundWingGlideID;
	int32_t m_SoundAlertID;
	int32_t m_SoundFidget[5];
	int32_t m_CustomAttack[4];
	int32_t m_NPCSoundID;
	int32_t m_LoopSoundID;
	int32_t m_CreatureImpactType;
	int32_t m_SoundJumpStartID;
	int32_t m_SoundJumpEndID;
	int32_t m_SoundPetAttackID;
	int32_t m_SoundPetOrderID;
	int32_t m_SoundPetDismissID;
	float m_FidgetDelaySecondsMin;
	float m_FidgetDelaySecondsMax;
	int32_t m_BirthSoundID;
	int32_t m_SpellCastDirectedSoundID;
	int32_t m_SubmergeSoundID;
	int32_t m_SubmergedSoundID;
	int32_t m_CreatureSoundDataIDPet;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct CreatureSpellDataRec {
	static constexpr uint32_t NumColumns = 9;
	static constexpr uint32_t RowSize = 36;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Spells[4];
	int32_t m_Availability[4];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct CreatureTypeRec {
	static constexpr uint32_t NumColumns = 19;
	static constexpr uint32_t RowSize = 76;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	int32_t m_Flags;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct CurrencyCategoryRec {
	static constexpr uint32_t NumColumns = 19;
	static constexpr uint32_t RowSize = 76;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Flags;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct CurrencyTypesRec {
	static constexpr uint32_t NumColumns = 4;
	static constexpr uint32_t RowSize = 16;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ItemID;
	int32_t m_CategoryID;
	int32_t m_BitIndex;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct DanceMovesRec {
	static constexpr uint32_t NumColumns = 24;
	static constexpr uint32_t RowSize = 96;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Type;
	int32_t m_Param;
	int32_t m_Fallback;
	int32_t m_Racemask;
	const char* m_Internal_name;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	int32_t m_LockID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct DeathThudLookupsRec {
	static constexpr uint32_t NumColumns = 5;
	static constexpr uint32_t RowSize = 20;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_SizeClass;
	int32_t m_TerrainTypeSoundID;
	int32_t m_SoundEntryID;
	int32_t m_SoundEntryIDWater;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct DeclinedWordRec {
	static constexpr uint32_t NumColumns = 2;
	static constexpr uint32_t RowSize = 8;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Word;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct DeclinedWordCasesRec {
	static constexpr uint32_t NumColumns = 4;
	static constexpr uint32_t RowSize = 16;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_DeclinedWordID;
	int32_t m_CaseIndex;
	const char* m_DeclinedWord;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct DestructibleModelDataRec {
	static constexpr uint32_t NumColumns = 19;
	static constexpr uint32_t RowSize = 76;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_State0ImpactEffectDoodadSet;
	int32_t m_State0AmbientDoodadSet;
	int32_t m_State1WMO;
	int32_t m_State1DestructionDoodadSet;
	int32_t m_State1ImpactEffectDoodadSet;
	int32_t m_State1AmbientDoodadSet;
	int32_t m_State2WMO;
	int32_t m_State2DestructionDoodadSet;
	int32_t m_State2ImpactEffectDoodadSet;
	int32_t m_State2AmbientDoodadSet;
	int32_t m_State3WMO;
	int32_t m_State3InitDoodadSet;
	int32_t m_State3AmbientDoodadSet;
	int32_t m_EjectDirection;
	int32_t m_RepairGroundFx;
	int32_t m_DoNotHighlight;
	int32_t m_HealEffect;
	int32_t m_HealEffectSpeed;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct DungeonEncounterRec {
	static constexpr uint32_t NumColumns = 23;
	static constexpr uint32_t RowSize = 92;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_MapID;
	int32_t m_Difficulty;
	int32_t m_OrderIndex;
	int32_t m_Bit;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	int32_t m_SpellIconID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct DungeonMapRec {
	static constexpr uint32_t NumColumns = 8;
	static constexpr uint32_t RowSize = 32;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_MapID;
	int32_t m_FloorIndex;
	float m_MinX;
	float m_MaxX;
	float m_MinY;
	float m_MaxY;
	int32_t m_ParentWorldMapID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct DungeonMapChunkRec {
	static constexpr uint32_t NumColumns = 5;
	static constexpr uint32_t RowSize = 20;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_MapID;
	int32_t m_WMOGroupID;
	int32_t m_DungeonMapID;
	float m_MinZ;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct DurabilityCostsRec {
	static constexpr uint32_t NumColumns = 30;
	static constexpr uint32_t RowSize = 120;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_WeaponSubClassCost[21];
	int32_t m_ArmorSubClassCost[8];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct DurabilityQualityRec {
	static constexpr uint32_t NumColumns = 2;
	static constexpr uint32_t RowSize = 8;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	float m_Data;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct EmotesRec {
	static constexpr uint32_t NumColumns = 7;
	static constexpr uint32_t RowSize = 28;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_EmoteSlashCommand;
	int32_t m_AnimID;
	int32_t m_EmoteFlags;
	int32_t m_EmoteSpecProc;
	int32_t m_EmoteSpecProcParam;
	int32_t m_EventSoundID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct EmotesTextRec {
	static constexpr uint32_t NumColumns = 19;
	static constexpr uint32_t RowSize = 76;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name;
	int32_t m_EmoteID;
	int32_t m_EmoteText[16];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct EmotesTextDataRec {
	static constexpr uint32_t NumColumns = 18;
	static constexpr uint32_t RowSize = 72;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Text_lang[16];
	uint32_t m_Text_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct EmotesTextSoundRec {
	static constexpr uint32_t NumColumns = 5;
	static constexpr uint32_t RowSize = 20;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_EmotesTextID;
	int32_t m_RaceID;
	int32_t m_SexID;
	int32_t m_SoundID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct EnvironmentalDamageRec {
	static constexpr uint32_t NumColumns = 3;
	static constexpr uint32_t RowSize = 12;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_EnumID;
	int32_t m_VisualkitID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ExhaustionRec {
	static constexpr uint32_t NumColumns = 23;
	static constexpr uint32_t RowSize = 92;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Xp;
	float m_Factor;
	float m_OutdoorHours;
	float m_InnHours;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	float m_Threshold;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct FactionRec {
	static constexpr uint32_t NumColumns = 57;
	static constexpr uint32_t RowSize = 228;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ReputationIndex;
	int32_t m_ReputationRaceMask[4];
	int32_t m_ReputationClassMask[4];
	int32_t m_ReputationBase[4];
	int32_t m_ReputationFlags[4];
	int32_t m_ParentFactionID;
	float m_ParentFactionMod[2];
	int32_t m_ParentFactionCap[2];
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	const char* m_Description_lang[16];
	uint32_t m_Description_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct FactionGroupRec {
	static constexpr uint32_t NumColumns = 20;
	static constexpr uint32_t RowSize = 80;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_MaskID;
	const char* m_InternalName;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct FactionTemplateRec {
	static constexpr uint32_t NumColumns = 14;
	static constexpr uint32_t RowSize = 56;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Faction;
	int32_t m_Flags;
	int32_t m_FactionGroup;
	int32_t m_FriendGroup;
	int32_t m_EnemyGroup;
	int32_t m_Enemies[4];
	int32_t m_Friend[4];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct FileDataRec {
	static constexpr uint32_t NumColumns = 3;
	static constexpr uint32_t RowSize = 12;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Filename;
	const char* m_Filepath;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct FootprintTexturesRec {
	static constexpr uint32_t NumColumns = 2;
	static constexpr uint32_t RowSize = 8;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_FootstepFilename;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct FootstepTerrainLookupRec {
	static constexpr uint32_t NumColumns = 5;
	static constexpr uint32_t RowSize = 20;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_CreatureFootstepID;
	int32_t m_TerrainSoundID;
	int32_t m_SoundID;
	int32_t m_SoundIDSplash;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct GMSurveyAnswersRec {
	static constexpr uint32_t NumColumns = 20;
	static constexpr uint32_t RowSize = 80;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Sort_Index;
	int32_t m_GMSurveyQuestionID;
	const char* m_Answer_lang[16];
	uint32_t m_Answer_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct GMSurveyCurrentSurveyRec {
	static constexpr uint32_t NumColumns = 2;
	static constexpr uint32_t RowSize = 8;
	static constexpr bool IndexIsID = true;

	int32_t m_LANGID;
	int32_t m_GMSURVEY_ID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct GMSurveyQuestionsRec {
	static constexpr uint32_t NumColumns = 18;
	static constexpr uint32_t RowSize = 72;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Question_lang[16];
	uint32_t m_Question_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct GMSurveySurveysRec {
	static constexpr uint32_t NumColumns = 11;
	static constexpr uint32_t RowSize = 44;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Q[10];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct GMTicketCategoryRec {
	static constexpr uint32_t NumColumns = 18;
	static constexpr uint32_t RowSize = 72;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Category_lang[16];
	uint32_t m_Category_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct GameObjectArtKitRec {
	static constexpr uint32_t NumColumns = 8;
	static constexpr uint32_t RowSize = 32;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_TextureVariation[3];
	const char* m_AttachModel[4];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct GameObjectDisplayInfoRec {
	static constexpr uint32_t NumColumns = 19;
	static constexpr uint32_t RowSize = 76;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_ModelName;
	int32_t m_Sound[10];
	float m_GeoBoxMin[3];
	float m_GeoBoxMax[3];
	int32_t m_ObjectEffectPackageID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct GameTablesRec {
	static constexpr uint32_t NumColumns = 3;
	static constexpr uint32_t RowSize = 12;
	static constexpr bool IndexIsID = true;

	const char* m_Name;
	int32_t m_NumRows;
	int32_t m_NumColumns;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct GameTipsRec {
	static constexpr uint32_t NumColumns = 18;
	static constexpr uint32_t RowSize = 72;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Text_lang[16];
	uint32_t m_Text_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct GemPropertiesRec {
	static constexpr uint32_t NumColumns = 5;
	static constexpr uint32_t RowSize = 20;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Enchant_ID;
	int32_t m_Maxcount_inv;
	int32_t m_Maxcount_item;
	int32_t m_Type;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct GlueScreenEmoteRec {
	static constexpr uint32_t NumColumns = 8;
	static constexpr uint32_t RowSize = 32;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ClassID;
	int32_t m_RaceID;
	int32_t m_SexID;
	int32_t m_LeftHandItemType;
	int32_t m_RightHandItemType;
	int32_t m_AnimKitID;
	int32_t m_SpellVisualKitID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct GlyphPropertiesRec {
	static constexpr uint32_t NumColumns = 4;
	static constexpr uint32_t RowSize = 16;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_SpellID;
	int32_t m_GlyphSlotFlags;
	int32_t m_SpellIconID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct GlyphSlotRec {
	static constexpr uint32_t NumColumns = 3;
	static constexpr uint32_t RowSize = 12;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Type;
	int32_t m_Tooltip;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct GroundEffectDoodadRec {
	static constexpr uint32_t NumColumns = 3;
	static constexpr uint32_t RowSize = 12;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Doodadpath;
	int32_t m_Flags;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct GroundEffectTextureRec {
	static constexpr uint32_t NumColumns = 11;
	static constexpr uint32_t RowSize = 44;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_DoodadID[4];
	int32_t m_DoodadWeight[4];
	int32_t m_Density;
	int32_t m_Sound;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct GuildPerkSpellsRec {
	static constexpr uint32_t NumColumns = 3;
	static constexpr uint32_t RowSize = 12;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_GuildLevel;
	int32_t m_SpellID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct HelmetGeosetVisDataRec {
	static constexpr uint32_t NumColumns = 8;
	static constexpr uint32_t RowSize = 32;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_HideGeoset[7];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct HolidayDescriptionsRec {
	static constexpr uint32_t NumColumns = 18;
	static constexpr uint32_t RowSize = 72;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Description_lang[16];
	uint32_t m_Description_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct HolidayNamesRec {
	static constexpr uint32_t NumColumns = 18;
	static constexpr uint32_t RowSize = 72;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct HolidaysRec {
	static constexpr uint32_t NumColumns = 55;
	static constexpr uint32_t RowSize = 220;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Duration[10];
	int32_t m_Date[26];
	int32_t m_Region;
	int32_t m_Looping;
	int32_t m_CalendarFlags[10];
	int32_t m_HolidayNameID;
	int32_t m_HolidayDescriptionID;
	const char* m_TextureFileName;
	int32_t m_Priority;
	int32_t m_CalendarFilterType;
	int32_t m_Flags;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemRec {
	static constexpr uint32_t NumColumns = 8;
	static constexpr uint32_t RowSize = 32;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ClassID;
	int32_t m_SubclassID;
	int32_t m_Sound_override_subclassID;
	int32_t m_Material;
	int32_t m_DisplayInfoID;
	int32_t m_InventoryType;
	int32_t m_SheatheType;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemArmorQualityRec {
	static constexpr uint32_t NumColumns = 9;
	static constexpr uint32_t RowSize = 36;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	float m_Qualitymod[7];
	int32_t m_ItemLevel;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemArmorShieldRec {
	static constexpr uint32_t NumColumns = 9;
	static constexpr uint32_t RowSize = 36;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ItemLevel;
	float m_Quality[7];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemArmorTotalRec {
	static constexpr uint32_t NumColumns = 6;
	static constexpr uint32_t RowSize = 24;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ItemLevel;
	float m_Cloth;
	float m_Leather;
	float m_Mail;
	float m_Plate;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemBagFamilyRec {
	static constexpr uint32_t NumColumns = 18;
	static constexpr uint32_t RowSize = 72;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemClassRec {
	static constexpr uint32_t NumColumns = 20;
	static constexpr uint32_t RowSize = 80;
	static constexpr bool IndexIsID = true;

	int32_t m_ClassID;
	int32_t m_SubclassMapID;
	int32_t m_Flags;
	const char* m_ClassName_lang[16];
	uint32_t m_ClassName_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemCondExtCostsRec {
	static constexpr uint32_t NumColumns = 4;
	static constexpr uint32_t RowSize = 16;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_CondExtendedCost;
	int32_t m_ItemExtendedCostEntry;
	int32_t m_ArenaSeason;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemDamageAmmoRec {
	static constexpr uint32_t NumColumns = 9;
	static constexpr uint32_t RowSize = 36;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	float m_Quality[7];
	int32_t m_ItemLevel;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemDamageOneHandRec {
	static constexpr uint32_t NumColumns = 9;
	static constexpr uint32_t RowSize = 36;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	float m_Quality[7];
	int32_t m_ItemLevel;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemDamageOneHandCasterRec {
	static constexpr uint32_t NumColumns = 9;
	static constexpr uint32_t RowSize = 36;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	float m_Quality[7];
	int32_t m_ItemLevel;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemDamageRangedRec {
	static constexpr uint32_t NumColumns = 9;
	static constexpr uint32_t RowSize = 36;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	float m_Quality[7];
	int32_t m_ItemLevel;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemDamageThrownRec {
	static constexpr uint32_t NumColumns = 9;
	static constexpr uint32_t RowSize = 36;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	float m_Quality[7];
	int32_t m_ItemLevel;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemDamageTwoHandRec {
	static constexpr uint32_t NumColumns = 9;
	static constexpr uint32_t RowSize = 36;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	float m_Quality[7];
	int32_t m_ItemLevel;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemDamageTwoHandCasterRec {
	static constexpr uint32_t NumColumns = 9;
	static constexpr uint32_t RowSize = 36;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	float m_Quality[7];
	int32_t m_ItemLevel;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemDamageWandRec {
	static constexpr uint32_t NumColumns = 9;
	static constexpr uint32_t RowSize = 36;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	float m_Quality[7];
	int32_t m_ItemLevel;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemDisplayInfoRec {
	static constexpr uint32_t NumColumns = 25;
	static constexpr uint32_t RowSize = 100;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_ModelName[2];
	const char* m_ModelTexture[2];
	const char* m_InventoryIcon[2];
	int32_t m_GeosetGroup[3];
	int32_t m_Flags;
	int32_t m_SpellVisualID;
	int32_t m_GroupSoundIndex;
	int32_t m_HelmetGeosetVisID[2];
	const char* m_Texture[8];
	int32_t m_ItemVisual;
	int32_t m_ParticleColorID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemExtendedCostRec {
	static constexpr uint32_t NumColumns = 16;
	static constexpr uint32_t RowSize = 64;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_HonorPoints;
	int32_t m_ArenaPoints;
	int32_t m_ArenaBracket;
	int32_t m_ItemID[5];
	int32_t m_ItemCount[5];
	int32_t m_RequiredArenaRating;
	int32_t m_ItemPurchaseGroup;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemGroupSoundsRec {
	static constexpr uint32_t NumColumns = 5;
	static constexpr uint32_t RowSize = 20;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Sound[4];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemLimitCategoryRec {
	static constexpr uint32_t NumColumns = 20;
	static constexpr uint32_t RowSize = 80;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	int32_t m_Quantity;
	int32_t m_Flags;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemPetFoodRec {
	static constexpr uint32_t NumColumns = 18;
	static constexpr uint32_t RowSize = 72;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemPurchaseGroupRec {
	static constexpr uint32_t NumColumns = 26;
	static constexpr uint32_t RowSize = 104;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ItemID[8];
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemRandomPropertiesRec {
	static constexpr uint32_t NumColumns = 24;
	static constexpr uint32_t RowSize = 96;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name;
	int32_t m_Enchantment[5];
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemRandomSuffixRec {
	static constexpr uint32_t NumColumns = 29;
	static constexpr uint32_t RowSize = 116;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	const char* m_InternalName;
	int32_t m_Enchantment[5];
	int32_t m_AllocationPct[5];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemReforgeRec {
	static constexpr uint32_t NumColumns = 5;
	static constexpr uint32_t RowSize = 20;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Source_stat;
	float m_Source_multiplier;
	int32_t m_Target_stat;
	float m_Target_multiplier;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemSetRec {
	static constexpr uint32_t NumColumns = 53;
	static constexpr uint32_t RowSize = 212;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	int32_t m_ItemID[17];
	int32_t m_SetSpellID[8];
	int32_t m_SetThreshold[8];
	int32_t m_RequiredSkill;
	int32_t m_RequiredSkillRank;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemSubClassRec {
	static constexpr uint32_t NumColumns = 44;
	static constexpr uint32_t RowSize = 176;
	static constexpr bool IndexIsID = true;

	int32_t m_ClassID;
	int32_t m_SubClassID;
	int32_t m_PrerequisiteProficiency;
	int32_t m_PostrequisiteProficiency;
	int32_t m_Flags;
	int32_t m_DisplayFlags;
	int32_t m_WeaponParrySeq;
	int32_t m_WeaponReadySeq;
	int32_t m_WeaponAttackSeq;
	int32_t m_WeaponSwingSize;
	const char* m_DisplayName_lang[16];
	uint32_t m_DisplayName_lang_bitmask;
	const char* m_VerboseName_lang[16];
	uint32_t m_VerboseName_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemSubClassMaskRec {
	static constexpr uint32_t NumColumns = 19;
	static constexpr uint32_t RowSize = 76;
	static constexpr bool IndexIsID = true;

	int32_t m_ClassID;
	int32_t m_Mask;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemVisualEffectsRec {
	static constexpr uint32_t NumColumns = 2;
	static constexpr uint32_t RowSize = 8;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Model;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ItemVisualsRec {
	static constexpr uint32_t NumColumns = 6;
	static constexpr uint32_t RowSize = 24;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Slot[5];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct LFGDungeonExpansionRec {
	static constexpr uint32_t NumColumns = 8;
	static constexpr uint32_t RowSize = 32;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Lfg_ID;
	int32_t m_Expansion_level;
	int32_t m_Random_ID;
	int32_t m_Hard_level_min;
	int32_t m_Hard_level_max;
	int32_t m_Target_level_min;
	int32_t m_Target_level_max;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct LFGDungeonGroupRec {
	static constexpr uint32_t NumColumns = 21;
	static constexpr uint32_t RowSize = 84;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	int32_t m_Order_index;
	int32_t m_Parent_group_ID;
	int32_t m_TypeID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct LFGDungeonsRec {
	static constexpr uint32_t NumColumns = 49;
	static constexpr uint32_t RowSize = 196;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	int32_t m_MinLevel;
	int32_t m_MaxLevel;
	int32_t m_Target_level;
	int32_t m_Target_level_min;
	int32_t m_Target_level_max;
	int32_t m_MapID;
	int32_t m_Difficulty;
	int32_t m_Flags;
	int32_t m_TypeID;
	int32_t m_Faction;
	const char* m_TextureFilename;
	int32_t m_ExpansionLevel;
	int32_t m_Order_index;
	int32_t m_Group_ID;
	const char* m_Description_lang[16];
	uint32_t m_Description_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct LanguageWordsRec {
	static constexpr uint32_t NumColumns = 3;
	static constexpr uint32_t RowSize = 12;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_LanguageID;
	const char* m_Word;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct LanguagesRec {
	static constexpr uint32_t NumColumns = 18;
	static constexpr uint32_t RowSize = 72;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct LightRec {
	static constexpr uint32_t NumColumns = 15;
	static constexpr uint32_t RowSize = 60;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ContinentID;
	float m_GameCoords[3];
	float m_GameFalloffStart;
	float m_GameFalloffEnd;
	int32_t m_LightParamsID[8];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct LightFloatBandRec {
	static constexpr uint32_t NumColumns = 34;
	static constexpr uint32_t RowSize = 136;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Num;
	int32_t m_Time[16];
	float m_Data[16];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct LightIntBandRec {
	static constexpr uint32_t NumColumns = 34;
	static constexpr uint32_t RowSize = 136;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Num;
	int32_t m_Time[16];
	int32_t m_Data[16];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct LightParamsRec {
	static constexpr uint32_t NumColumns = 9;
	static constexpr uint32_t RowSize = 36;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_HighlightSky;
	int32_t m_LightSkyboxID;
	float m_Glow;
	float m_WaterShallowAlpha;
	float m_WaterDeepAlpha;
	float m_OceanShallowAlpha;
	float m_OceanDeepAlpha;
	int32_t m_Flags;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct LightSkyboxRec {
	static constexpr uint32_t NumColumns = 3;
	static constexpr uint32_t RowSize = 12;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name;
	int32_t m_Flags;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct LiquidMaterialRec {
	static constexpr uint32_t NumColumns = 3;
	static constexpr uint32_t RowSize = 12;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_LVF;
	int32_t m_Flags;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct LiquidObjectRec {
	static constexpr uint32_t NumColumns = 6;
	static constexpr uint32_t RowSize = 24;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	float m_FlowDirection;
	float m_FlowSpeed;
	int32_t m_LiquidTypeID;
	int32_t m_Fishable;
	int32_t m_Reflection;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct LiquidTypeRec {
	static constexpr uint32_t NumColumns = 45;
	static constexpr uint32_t RowSize = 180;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name;
	int32_t m_Flags;
	int32_t m_SoundBank;
	int32_t m_SoundID;
	int32_t m_SpellID;
	float m_MaxDarkenDepth;
	float m_FogDarkenIntensity;
	float m_AmbDarkenIntensity;
	float m_DirDarkenIntensity;
	int32_t m_LightID;
	float m_ParticleScale;
	int32_t m_ParticleMovement;
	int32_t m_ParticleTexSlots;
	int32_t m_MaterialID;
	const char* m_Texture[6];
	int32_t m_Color[2];
	float m_Float[18];
	int32_t m_Int[4];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct LoadingScreenTaxiSplinesRec {
	static constexpr uint32_t NumColumns = 19;
	static constexpr uint32_t RowSize = 76;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_PathID;
	float m_Locx[8];
	float m_Locy[8];
	int32_t m_LegIndex;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct LoadingScreensRec {
	static constexpr uint32_t NumColumns = 4;
	static constexpr uint32_t RowSize = 16;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name;
	const char* m_FileName;
	int32_t m_HasWideScreen;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct LockRec {
	static constexpr uint32_t NumColumns = 33;
	static constexpr uint32_t RowSize = 132;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Type[8];
	int32_t m_Index[8];
	int32_t m_Skill[8];
	int32_t m_Action[8];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct LockTypeRec {
	static constexpr uint32_t NumColumns = 53;
	static constexpr uint32_t RowSize = 212;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	const char* m_ResourceName_lang[16];
	uint32_t m_ResourceName_lang_bitmask;
	const char* m_Verb_lang[16];
	uint32_t m_Verb_lang_bitmask;
	const char* m_CursorName;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct MailTemplateRec {
	static constexpr uint32_t NumColumns = 35;
	static constexpr uint32_t RowSize = 140;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Subject_lang[16];
	uint32_t m_Subject_lang_bitmask;
	const char* m_Body_lang[16];
	uint32_t m_Body_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct MapRec {
	static constexpr uint32_t NumColumns = 66;
	static constexpr uint32_t RowSize = 264;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Directory;
	int32_t m_InstanceType;
	int32_t m_Flags;
	int32_t m_PVP;
	const char* m_MapName_lang[16];
	uint32_t m_MapName_lang_bitmask;
	int32_t m_AreaTableID;
	const char* m_MapDescription0_lang[16];
	uint32_t m_MapDescription0_lang_bitmask;
	const char* m_MapDescription1_lang[16];
	uint32_t m_MapDescription1_lang_bitmask;
	int32_t m_LoadingScreenID;
	float m_MinimapIconScale;
	int32_t m_CorpseMapID;
	float m_Corpse[2];
	int32_t m_TimeOfDayOverride;
	int32_t m_ExpansionID;
	int32_t m_RaidOffset;
	int32_t m_MaxPlayers;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct MapDifficultyRec {
	static constexpr uint32_t NumColumns = 23;
	static constexpr uint32_t RowSize = 92;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_MapID;
	int32_t m_Difficulty;
	const char* m_Message_lang[16];
	uint32_t m_Message_lang_bitmask;
	int32_t m_RaidDuration;
	int32_t m_MaxPlayers;
	const char* m_Difficultystring;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct MaterialRec {
	static constexpr uint32_t NumColumns = 5;
	static constexpr uint32_t RowSize = 20;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Flags;
	int32_t m_FoleySoundID;
	int32_t m_SheatheSoundID;
	int32_t m_UnsheatheSoundID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct MountTypeRec {
	static constexpr uint32_t NumColumns = 9;
	static constexpr uint32_t RowSize = 36;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Capability[8];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct MovieRec {
	static constexpr uint32_t NumColumns = 3;
	static constexpr uint32_t RowSize = 12;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Filename;
	int32_t m_Volume;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct MovieFileDataRec {
	static constexpr uint32_t NumColumns = 2;
	static constexpr uint32_t RowSize = 8;
	static constexpr bool IndexIsID = true;

	int32_t m_FileDataID;
	int32_t m_Resolution;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct MovieVariationRec {
	static constexpr uint32_t NumColumns = 3;
	static constexpr uint32_t RowSize = 12;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_MovieID;
	int32_t m_FileDataID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct NPCSoundsRec {
	static constexpr uint32_t NumColumns = 5;
	static constexpr uint32_t RowSize = 20;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_SoundID[4];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct NameGenRec {
	static constexpr uint32_t NumColumns = 4;
	static constexpr uint32_t RowSize = 16;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name;
	int32_t m_RaceID;
	int32_t m_Sex;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct NamesProfanityRec {
	static constexpr uint32_t NumColumns = 3;
	static constexpr uint32_t RowSize = 12;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name;
	int32_t m_Language;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct NamesReservedRec {
	static constexpr uint32_t NumColumns = 3;
	static constexpr uint32_t RowSize = 12;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name;
	int32_t m_Language;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ObjectEffectRec {
	static constexpr uint32_t NumColumns = 12;
	static constexpr uint32_t RowSize = 48;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name;
	int32_t m_ObjectEffectGroupID;
	int32_t m_TriggerType;
	int32_t m_EventType;
	int32_t m_EffectRecType;
	int32_t m_EffectRecID;
	int32_t m_Attachment;
	float m_Offset[3];
	int32_t m_ObjectEffectModifierID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ObjectEffectGroupRec {
	static constexpr uint32_t NumColumns = 2;
	static constexpr uint32_t RowSize = 8;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ObjectEffectModifierRec {
	static constexpr uint32_t NumColumns = 8;
	static constexpr uint32_t RowSize = 32;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_InputType;
	int32_t m_MapType;
	int32_t m_OutputType;
	float m_Param[4];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ObjectEffectPackageRec {
	static constexpr uint32_t NumColumns = 2;
	static constexpr uint32_t RowSize = 8;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ObjectEffectPackageElemRec {
	static constexpr uint32_t NumColumns = 4;
	static constexpr uint32_t RowSize = 16;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ObjectEffectPackageID;
	int32_t m_ObjectEffectGroupID;
	int32_t m_StateType;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct OverrideSpellDataRec {
	static constexpr uint32_t NumColumns = 12;
	static constexpr uint32_t RowSize = 48;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Spells[10];
	int32_t m_Flags;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct PVPDifficultyRec {
	static constexpr uint32_t NumColumns = 6;
	static constexpr uint32_t RowSize = 24;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_MapID;
	int32_t m_RangeIndex;
	int32_t m_MinLevel;
	int32_t m_MaxLevel;
	int32_t m_Difficulty;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct PackageRec {
	static constexpr uint32_t NumColumns = 20;
	static constexpr uint32_t RowSize = 80;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Icon;
	int32_t m_Cost;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct PageTextMaterialRec {
	static constexpr uint32_t NumColumns = 2;
	static constexpr uint32_t RowSize = 8;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct PaperDollItemFrameRec {
	static constexpr uint32_t NumColumns = 3;
	static constexpr uint32_t RowSize = 12;
	static constexpr bool IndexIsID = true;

	const char* m_ItemButtonName;
	const char* m_SlotIcon;
	int32_t m_SlotNumber;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ParticleColorRec {
	static constexpr uint32_t NumColumns = 10;
	static constexpr uint32_t RowSize = 40;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Start[3];
	int32_t m_MID[3];
	int32_t m_End[3];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct PetPersonalityRec {
	static constexpr uint32_t NumColumns = 24;
	static constexpr uint32_t RowSize = 96;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	int32_t m_HappinessThreshold[3];
	float m_HappinessDamage[3];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct PetitionTypeRec {
	static constexpr uint32_t NumColumns = 3;
	static constexpr uint32_t RowSize = 12;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name;
	int32_t m_Type;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct PhaseRec {
	static constexpr uint32_t NumColumns = 6;
	static constexpr uint32_t RowSize = 24;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_MapID;
	int32_t m_ParentMapID[2];
	const char* m_Name;
	int32_t m_Flags;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct PhaseShiftZoneSoundsRec {
	static constexpr uint32_t NumColumns = 14;
	static constexpr uint32_t RowSize = 56;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_AreaID;
	int32_t m_WMOAreaID;
	int32_t m_PhaseID;
	int32_t m_PhaseGroupID;
	int32_t m_PhaseUseFlags;
	int32_t m_ZoneIntroMusicID;
	int32_t m_ZoneMusicID;
	int32_t m_SoundAmbienceID;
	int32_t m_SoundProviderPreferencesID;
	int32_t m_UWZoneIntroMusicID;
	int32_t m_UWZoneMusicID;
	int32_t m_UWSoundAmbienceID;
	int32_t m_UWSoundProviderPreferencesID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct PhaseXPhaseGroupRec {
	static constexpr uint32_t NumColumns = 3;
	static constexpr uint32_t RowSize = 12;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_PhaseID;
	int32_t m_PhaseGroupID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct PowerDisplayRec {
	static constexpr uint32_t NumColumns = 6;
	static constexpr uint32_t RowSize = 15;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ActualType;
	const char* m_GlobalStringBaseTag;
	int8_t m_Red;
	int8_t m_Green;
	int8_t m_Blue;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct QuestFactionRewardRec {
	static constexpr uint32_t NumColumns = 11;
	static constexpr uint32_t RowSize = 44;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Difficulty[10];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct QuestInfoRec {
	static constexpr uint32_t NumColumns = 18;
	static constexpr uint32_t RowSize = 72;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_InfoName_lang[16];
	uint32_t m_InfoName_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct QuestSortRec {
	static constexpr uint32_t NumColumns = 18;
	static constexpr uint32_t RowSize = 72;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_SortName_lang[16];
	uint32_t m_SortName_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct QuestXPRec {
	static constexpr uint32_t NumColumns = 11;
	static constexpr uint32_t RowSize = 44;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Difficulty[10];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct RandPropPointsRec {
	static constexpr uint32_t NumColumns = 16;
	static constexpr uint32_t RowSize = 64;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Epic[5];
	int32_t m_Superior[5];
	int32_t m_Good[5];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ResearchBranchRec {
	static constexpr uint32_t NumColumns = 22;
	static constexpr uint32_t RowSize = 88;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	int32_t m_ResearchFieldID;
	int32_t m_CurrencyID;
	const char* m_Texture;
	int32_t m_ItemID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ResistancesRec {
	static constexpr uint32_t NumColumns = 20;
	static constexpr uint32_t RowSize = 80;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Flags;
	int32_t m_FizzleSoundID;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ScalingStatDistributionRec {
	static constexpr uint32_t NumColumns = 22;
	static constexpr uint32_t RowSize = 88;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_StatID[10];
	int32_t m_Bonus[10];
	int32_t m_Maxlevel;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ScalingStatValuesRec {
	static constexpr uint32_t NumColumns = 24;
	static constexpr uint32_t RowSize = 96;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Charlevel;
	int32_t m_ShoulderBudget;
	int32_t m_TrinketBudget;
	int32_t m_WeaponBudget1H;
	int32_t m_RangedBudget;
	int32_t m_ClothShoulderArmor;
	int32_t m_LeatherShoulderArmor;
	int32_t m_MailShoulderArmor;
	int32_t m_PlateShoulderArmor;
	int32_t m_WeaponDPS1H;
	int32_t m_WeaponDPS2H;
	int32_t m_SpellcasterDPS1H;
	int32_t m_SpellcasterDPS2H;
	int32_t m_RangedDPS;
	int32_t m_WandDPS;
	int32_t m_SpellPower;
	int32_t m_PrimaryBudget;
	int32_t m_TertiaryBudget;
	int32_t m_ClothCloakArmor;
	int32_t m_ClothChestArmor;
	int32_t m_LeatherChestArmor;
	int32_t m_MailChestArmor;
	int32_t m_PlateChestArmor;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ScreenEffectRec {
	static constexpr uint32_t NumColumns = 10;
	static constexpr uint32_t RowSize = 40;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name;
	int32_t m_Effect;
	int32_t m_Param[4];
	int32_t m_LightParamsID;
	int32_t m_SoundAmbienceID;
	int32_t m_ZoneMusicID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ServerMessagesRec {
	static constexpr uint32_t NumColumns = 18;
	static constexpr uint32_t RowSize = 72;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Text_lang[16];
	uint32_t m_Text_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SheatheSoundLookupsRec {
	static constexpr uint32_t NumColumns = 7;
	static constexpr uint32_t RowSize = 28;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ClassID;
	int32_t m_SubclassID;
	int32_t m_Material;
	int32_t m_CheckMaterial;
	int32_t m_SheatheSound;
	int32_t m_UnsheatheSound;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SkillCostsDataRec {
	static constexpr uint32_t NumColumns = 5;
	static constexpr uint32_t RowSize = 20;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_SkillCostsID;
	int32_t m_Cost[3];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SkillLineRec {
	static constexpr uint32_t NumColumns = 56;
	static constexpr uint32_t RowSize = 224;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_CategoryID;
	int32_t m_SkillCostsID;
	const char* m_DisplayName_lang[16];
	uint32_t m_DisplayName_lang_bitmask;
	const char* m_Description_lang[16];
	uint32_t m_Description_lang_bitmask;
	int32_t m_SpellIconID;
	const char* m_AlternateVerb_lang[16];
	uint32_t m_AlternateVerb_lang_bitmask;
	int32_t m_CanLink;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SkillLineAbilityRec {
	static constexpr uint32_t NumColumns = 14;
	static constexpr uint32_t RowSize = 56;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_SkillLine;
	int32_t m_Spell;
	int32_t m_RaceMask;
	int32_t m_ClassMask;
	int32_t m_ExcludeRace;
	int32_t m_ExcludeClass;
	int32_t m_MinSkillLineRank;
	int32_t m_SupercededBySpell;
	int32_t m_AcquireMethod;
	int32_t m_TrivialSkillLineRankHigh;
	int32_t m_TrivialSkillLineRankLow;
	int32_t m_CharacterPoints[2];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SkillLineCategoryRec {
	static constexpr uint32_t NumColumns = 19;
	static constexpr uint32_t RowSize = 76;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	int32_t m_SortIndex;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SkillRaceClassInfoRec {
	static constexpr uint32_t NumColumns = 8;
	static constexpr uint32_t RowSize = 32;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_SkillID;
	int32_t m_RaceMask;
	int32_t m_ClassMask;
	int32_t m_Flags;
	int32_t m_MinLevel;
	int32_t m_SkillTierID;
	int32_t m_SkillCostIndex;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SkillTiersRec {
	static constexpr uint32_t NumColumns = 33;
	static constexpr uint32_t RowSize = 132;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Cost[16];
	int32_t m_Value[16];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SoundAmbienceRec {
	static constexpr uint32_t NumColumns = 3;
	static constexpr uint32_t RowSize = 12;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_AmbienceID[2];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SoundEmittersRec {
	static constexpr uint32_t NumColumns = 10;
	static constexpr uint32_t RowSize = 40;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	float m_Position[3];
	float m_Direction[3];
	int32_t m_SoundEntryAdvancedID;
	int32_t m_MapID;
	const char* m_Name;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SoundEntriesRec {
	static constexpr uint32_t NumColumns = 30;
	static constexpr uint32_t RowSize = 120;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_SoundType;
	const char* m_Name;
	const char* m_File[10];
	int32_t m_Freq[10];
	const char* m_DirectoryBase;
	float m_VolumeFloat;
	int32_t m_Flags;
	float m_MinDistance;
	float m_DistanceCutoff;
	int32_t m_EAXDef;
	int32_t m_SoundEntriesAdvancedID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SoundEntriesAdvancedRec {
	static constexpr uint32_t NumColumns = 24;
	static constexpr uint32_t RowSize = 96;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_SoundEntryID;
	float m_InnerRadius2D;
	int32_t m_TimeA;
	int32_t m_TimeB;
	int32_t m_TimeC;
	int32_t m_TimeD;
	int32_t m_RandomOffsetRange;
	int32_t m_Usage;
	int32_t m_TimeIntervalMin;
	int32_t m_TimeIntervalMax;
	int32_t m_VolumeSliderCategory;
	float m_DuckToSFX;
	float m_DuckToMusic;
	float m_DuckToAmbience;
	float m_InnerRadiusOfInfluence;
	float m_OuterRadiusOfInfluence;
	int32_t m_TimeToDuck;
	int32_t m_TimeToUnduck;
	float m_InsideAngle;
	float m_OutsideAngle;
	float m_OutsideVolume;
	float m_OuterRadius2D;
	const char* m_Name;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SoundFilterRec {
	static constexpr uint32_t NumColumns = 2;
	static constexpr uint32_t RowSize = 8;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SoundFilterElemRec {
	static constexpr uint32_t NumColumns = 13;
	static constexpr uint32_t RowSize = 52;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_SoundFilterID;
	int32_t m_OrderIndex;
	int32_t m_FilterType;
	float m_Params[9];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SoundProviderPreferencesRec {
	static constexpr uint32_t NumColumns = 24;
	static constexpr uint32_t RowSize = 96;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Description;
	int32_t m_Flags;
	int32_t m_EAXEnvironmentSelection;
	float m_EAXDecayTime;
	float m_EAX2EnvironmentSize;
	float m_EAX2EnvironmentDiffusion;
	int32_t m_EAX2Room;
	int32_t m_EAX2RoomHF;
	float m_EAX2DecayHFRatio;
	int32_t m_EAX2Reflections;
	float m_EAX2ReflectionsDelay;
	int32_t m_EAX2Reverb;
	float m_EAX2ReverbDelay;
	float m_EAX2RoomRolloff;
	float m_EAX2AirAbsorption;
	int32_t m_EAX3RoomLF;
	float m_EAX3DecayLFRatio;
	float m_EAX3EchoTime;
	float m_EAX3EchoDepth;
	float m_EAX3ModulationTime;
	float m_EAX3ModulationDepth;
	float m_EAX3HFReference;
	float m_EAX3LFReference;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SoundSamplePreferencesRec {
	static constexpr uint32_t NumColumns = 17;
	static constexpr uint32_t RowSize = 68;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Field_0_6_0_3592_001;
	int32_t m_Field_0_6_0_3592_002;
	int32_t m_EAX2SampleRoom;
	int32_t m_Field_0_6_0_3592_004;
	int32_t m_Field_0_6_0_3592_005;
	float m_Field_0_6_0_3592_006;
	int32_t m_Field_0_6_0_3592_007;
	float m_EAX2SampleOcclusionLFRatio;
	float m_EAX2SampleOcclusionRoomRatio;
	int32_t m_Field_0_6_0_3592_010;
	float m_EAX1EffectLevel;
	int32_t m_Field_0_6_0_3592_012;
	float m_Field_0_6_0_3592_013;
	float m_EAX3SampleExclusion;
	float m_Field_0_6_0_3592_015;
	int32_t m_Field_0_6_0_3592_016;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SoundWaterTypeRec {
	static constexpr uint32_t NumColumns = 4;
	static constexpr uint32_t RowSize = 16;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_SoundType;
	int32_t m_SoundSubtype;
	int32_t m_SoundID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpamMessagesRec {
	static constexpr uint32_t NumColumns = 2;
	static constexpr uint32_t RowSize = 8;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Text;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellRec {
	static constexpr uint32_t NumColumns = 234;
	static constexpr uint32_t RowSize = 936;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Category;
	int32_t m_DispelType;
	int32_t m_Mechanic;
	int32_t m_Attributes;
	int32_t m_AttributesEx;
	int32_t m_AttributesExB;
	int32_t m_AttributesExC;
	int32_t m_AttributesExD;
	int32_t m_AttributesExE;
	int32_t m_AttributesExF;
	int32_t m_AttributesExG;
	int32_t m_ShapeshiftMask[2];
	int32_t m_ShapeshiftExclude[2];
	int32_t m_Targets;
	int32_t m_TargetCreatureType;
	int32_t m_RequiresSpellFocus;
	int32_t m_FacingCasterFlags;
	int32_t m_CasterAuraState;
	int32_t m_TargetAuraState;
	int32_t m_ExcludeCasterAuraState;
	int32_t m_ExcludeTargetAuraState;
	int32_t m_CasterAuraSpell;
	int32_t m_TargetAuraSpell;
	int32_t m_ExcludeCasterAuraSpell;
	int32_t m_ExcludeTargetAuraSpell;
	int32_t m_CastingTimeIndex;
	int32_t m_RecoveryTime;
	int32_t m_CategoryRecoveryTime;
	int32_t m_InterruptFlags;
	int32_t m_AuraInterruptFlags;
	int32_t m_ChannelInterruptFlags;
	int32_t m_ProcTypeMask;
	int32_t m_ProcChance;
	int32_t m_ProcCharges;
	int32_t m_MaxLevel;
	int32_t m_BaseLevel;
	int32_t m_SpellLevel;
	int32_t m_DurationIndex;
	int32_t m_PowerType;
	int32_t m_ManaCost;
	int32_t m_ManaCostPerLevel;
	int32_t m_ManaPerSecond;
	int32_t m_ManaPerSecondPerLevel;
	int32_t m_RangeIndex;
	float m_Speed;
	int32_t m_ModalNextSpell;
	int32_t m_CumulativeAura;
	int32_t m_Totem[2];
	int32_t m_Reagent[8];
	int32_t m_ReagentCount[8];
	int32_t m_EquippedItemClass;
	int32_t m_EquippedItemSubclass;
	int32_t m_EquippedItemInvTypes;
	int32_t m_Effect[3];
	int32_t m_EffectDieSides[3];
	float m_EffectRealPointsPerLevel[3];
	int32_t m_EffectBasePoints[3];
	int32_t m_EffectMechanic[3];
	int32_t m_ImplicitTargetA[3];
	int32_t m_ImplicitTargetB[3];
	int32_t m_EffectRadiusIndex[3];
	int32_t m_EffectAura[3];
	int32_t m_EffectAuraPeriod[3];
	float m_EffectAmplitude[3];
	int32_t m_EffectChainTargets[3];
	int32_t m_EffectItemType[3];
	int32_t m_EffectMiscValue[3];
	int32_t m_EffectMiscValueB[3];
	int32_t m_EffectTriggerSpell[3];
	float m_EffectPointsPerCombo[3];
	int32_t m_EffectSpellClassMaskA[3];
	int32_t m_EffectSpellClassMaskB[3];
	int32_t m_EffectSpellClassMaskC[3];
	int32_t m_SpellVisualID[2];
	int32_t m_SpellIconID;
	int32_t m_ActiveIconID;
	int32_t m_SpellPriority;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	const char* m_NameSubtext_lang[16];
	uint32_t m_NameSubtext_lang_bitmask;
	const char* m_Description_lang[16];
	uint32_t m_Description_lang_bitmask;
	const char* m_AuraDescription_lang[16];
	uint32_t m_AuraDescription_lang_bitmask;
	int32_t m_ManaCostPct;
	int32_t m_StartRecoveryCategory;
	int32_t m_StartRecoveryTime;
	int32_t m_MaxTargetLevel;
	int32_t m_SpellClassSet;
	int32_t m_SpellClassMask[3];
	int32_t m_MaxTargets;
	int32_t m_DefenseType;
	int32_t m_PreventionType;
	int32_t m_StanceBarOrder;
	float m_EffectChainAmplitude[3];
	int32_t m_MinFactionID;
	int32_t m_MinReputation;
	int32_t m_RequiredAuraVision;
	int32_t m_RequiredTotemCategoryID[2];
	int32_t m_RequiredAreasID;
	int32_t m_SchoolMask;
	int32_t m_RuneCostID;
	int32_t m_SpellMissileID;
	int32_t m_PowerDisplayID;
	float m_EffectBonusCoefficient[3];
	int32_t m_DescriptionVariablesID;
	int32_t m_Difficulty;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellAuraOptionsRec {
	static constexpr uint32_t NumColumns = 5;
	static constexpr uint32_t RowSize = 20;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_CumulativeAura;
	int32_t m_ProcChance;
	int32_t m_ProcCharges;
	int32_t m_ProcTypeMask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellAuraRestrictionsRec {
	static constexpr uint32_t NumColumns = 9;
	static constexpr uint32_t RowSize = 36;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_CasterAuraState;
	int32_t m_TargetAuraState;
	int32_t m_ExcludeCasterAuraState;
	int32_t m_ExcludeTargetAuraState;
	int32_t m_CasterAuraSpell;
	int32_t m_TargetAuraSpell;
	int32_t m_ExcludeCasterAuraSpell;
	int32_t m_ExcludeTargetAuraSpell;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellCastTimesRec {
	static constexpr uint32_t NumColumns = 4;
	static constexpr uint32_t RowSize = 16;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Base;
	int32_t m_PerLevel;
	int32_t m_Minimum;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellCastingRequirementsRec {
	static constexpr uint32_t NumColumns = 7;
	static constexpr uint32_t RowSize = 28;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_FacingCasterFlags;
	int32_t m_MinFactionID;
	int32_t m_MinReputation;
	int32_t m_RequiredAreasID;
	int32_t m_RequiredAuraVision;
	int32_t m_RequiresSpellFocus;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellCategoriesRec {
	static constexpr uint32_t NumColumns = 7;
	static constexpr uint32_t RowSize = 28;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Category;
	int32_t m_DefenseType;
	int32_t m_DispelType;
	int32_t m_Mechanic;
	int32_t m_PreventionType;
	int32_t m_StartRecoveryCategory;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellCategoryRec {
	static constexpr uint32_t NumColumns = 2;
	static constexpr uint32_t RowSize = 8;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Flags;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellChainEffectsRec {
	static constexpr uint32_t NumColumns = 48;
	static constexpr uint32_t RowSize = 177;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	float m_AvgSegLen;
	float m_Width;
	float m_NoiseScale;
	float m_TexCoordScale;
	int32_t m_SegDuration;
	int32_t m_SegDelay;
	const char* m_Texture;
	int32_t m_Flags;
	int32_t m_JointCount;
	float m_JointOffsetRadius;
	int32_t m_JointsPerMinorJoint;
	int32_t m_MinorJointsPerMajorJoint;
	float m_MinorJointScale;
	float m_MajorJointScale;
	float m_JointMoveSpeed;
	float m_JointSmoothness;
	float m_MinDurationBetweenJointJumps;
	float m_MaxDurationBetweenJointJumps;
	float m_WaveHeight;
	float m_WaveFreq;
	float m_WaveSpeed;
	float m_MinWaveAngle;
	float m_MaxWaveAngle;
	float m_MinWaveSpin;
	float m_MaxWaveSpin;
	float m_ArcHeight;
	float m_MinArcAngle;
	float m_MaxArcAngle;
	float m_MinArcSpin;
	float m_MaxArcSpin;
	float m_DelayBetweenEffects;
	float m_MinFlickerOnDuration;
	float m_MaxFlickerOnDuration;
	float m_MinFlickerOffDuration;
	float m_MaxFlickerOffDuration;
	float m_PulseSpeed;
	float m_PulseOnLength;
	float m_PulseFadeLength;
	int8_t m_Alpha;
	int8_t m_Red;
	int8_t m_Green;
	int8_t m_Blue;
	int8_t m_BlendMode;
	const char* m_Combo;
	int32_t m_RenderLayer;
	float m_TextureLength;
	float m_WavePhase;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellClassOptionsRec {
	static constexpr uint32_t NumColumns = 6;
	static constexpr uint32_t RowSize = 24;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ModalNextSpell;
	int32_t m_SpellClassMask[3];
	int32_t m_SpellClassSet;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellCooldownsRec {
	static constexpr uint32_t NumColumns = 4;
	static constexpr uint32_t RowSize = 16;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_CategoryRecoveryTime;
	int32_t m_RecoveryTime;
	int32_t m_StartRecoveryTime;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellDescriptionVariablesRec {
	static constexpr uint32_t NumColumns = 2;
	static constexpr uint32_t RowSize = 8;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Variables;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellDifficultyRec {
	static constexpr uint32_t NumColumns = 5;
	static constexpr uint32_t RowSize = 20;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_DifficultySpellID[4];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellDispelTypeRec {
	static constexpr uint32_t NumColumns = 21;
	static constexpr uint32_t RowSize = 84;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	int32_t m_Mask;
	int32_t m_ImmunityPossible;
	const char* m_InternalName;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellDurationRec {
	static constexpr uint32_t NumColumns = 4;
	static constexpr uint32_t RowSize = 16;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Duration;
	int32_t m_DurationPerLevel;
	int32_t m_MaxDuration;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellEffectRec {
	static constexpr uint32_t NumColumns = 26;
	static constexpr uint32_t RowSize = 104;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Effect;
	float m_EffectAmplitude;
	int32_t m_EffectAura;
	int32_t m_EffectAuraPeriod;
	int32_t m_EffectBasePoints;
	float m_EffectBonusCoefficient;
	float m_EffectChainAmplitude;
	int32_t m_EffectChainTargets;
	int32_t m_EffectDieSides;
	int32_t m_EffectItemType;
	int32_t m_EffectMechanic;
	int32_t m_EffectMiscValue[2];
	float m_EffectPointsPerResource;
	int32_t m_EffectRadiusIndex[2];
	float m_EffectRealPointsPerLevel;
	int32_t m_EffectSpellClassMask[3];
	int32_t m_EffectTriggerSpell;
	int32_t m_ImplicitTarget[2];
	int32_t m_SpellID;
	int32_t m_EffectIndex;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellEffectCameraShakesRec {
	static constexpr uint32_t NumColumns = 4;
	static constexpr uint32_t RowSize = 16;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_CameraShake[3];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellEquippedItemsRec {
	static constexpr uint32_t NumColumns = 4;
	static constexpr uint32_t RowSize = 16;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_EquippedItemClass;
	int32_t m_EquippedItemInvTypes;
	int32_t m_EquippedItemSubclass;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellFocusObjectRec {
	static constexpr uint32_t NumColumns = 18;
	static constexpr uint32_t RowSize = 72;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellIconRec {
	static constexpr uint32_t NumColumns = 2;
	static constexpr uint32_t RowSize = 8;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_TextureFilename;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellInterruptsRec {
	static constexpr uint32_t NumColumns = 6;
	static constexpr uint32_t RowSize = 24;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_AuraInterruptFlags[2];
	int32_t m_ChannelInterruptFlags[2];
	int32_t m_InterruptFlags;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellItemEnchantmentRec {
	static constexpr uint32_t NumColumns = 38;
	static constexpr uint32_t RowSize = 152;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Charges;
	int32_t m_Effect[3];
	int32_t m_EffectPointsMin[3];
	int32_t m_EffectPointsMax[3];
	int32_t m_EffectArg[3];
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	int32_t m_ItemVisual;
	int32_t m_Flags;
	int32_t m_Src_itemID;
	int32_t m_Condition_ID;
	int32_t m_RequiredSkillID;
	int32_t m_RequiredSkillRank;
	int32_t m_MinLevel;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellItemEnchantmentConditionRec {
	static constexpr uint32_t NumColumns = 31;
	static constexpr uint32_t RowSize = 64;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int8_t m_Lt_operandType[5];
	int32_t m_Lt_operand[5];
	int8_t m_Operator[5];
	int8_t m_Rt_operandType[5];
	int32_t m_Rt_operand[5];
	int8_t m_Logic[5];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellLevelsRec {
	static constexpr uint32_t NumColumns = 4;
	static constexpr uint32_t RowSize = 16;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_BaseLevel;
	int32_t m_MaxLevel;
	int32_t m_SpellLevel;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellMechanicRec {
	static constexpr uint32_t NumColumns = 18;
	static constexpr uint32_t RowSize = 72;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_StateName_lang[16];
	uint32_t m_StateName_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellMissileRec {
	static constexpr uint32_t NumColumns = 15;
	static constexpr uint32_t RowSize = 60;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Flags;
	float m_DefaultPitchMin;
	float m_DefaultPitchMax;
	float m_DefaultSpeedMin;
	float m_DefaultSpeedMax;
	float m_RandomizeFacingMin;
	float m_RandomizeFacingMax;
	float m_RandomizePitchMin;
	float m_RandomizePitchMax;
	float m_RandomizeSpeedMin;
	float m_RandomizeSpeedMax;
	float m_Gravity;
	float m_MaxDuration;
	float m_CollisionRadius;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellMissileMotionRec {
	static constexpr uint32_t NumColumns = 5;
	static constexpr uint32_t RowSize = 20;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name;
	const char* m_ScriptBody;
	int32_t m_Flags;
	int32_t m_MissileCount;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellPowerRec {
	static constexpr uint32_t NumColumns = 6;
	static constexpr uint32_t RowSize = 24;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ManaCost;
	int32_t m_ManaCostPerLevel;
	int32_t m_PowerCost;
	int32_t m_ManaPerSecond;
	int32_t m_PowerDisplayID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellRadiusRec {
	static constexpr uint32_t NumColumns = 4;
	static constexpr uint32_t RowSize = 16;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	float m_Radius;
	float m_RadiusPerLevel;
	float m_RadiusMax;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellRangeRec {
	static constexpr uint32_t NumColumns = 40;
	static constexpr uint32_t RowSize = 160;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	float m_RangeMin[2];
	float m_RangeMax[2];
	int32_t m_Flags;
	const char* m_DisplayName_lang[16];
	uint32_t m_DisplayName_lang_bitmask;
	const char* m_DisplayNameShort_lang[16];
	uint32_t m_DisplayNameShort_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellReagentsRec {
	static constexpr uint32_t NumColumns = 17;
	static constexpr uint32_t RowSize = 68;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Reagent[8];
	int32_t m_ReagentCount[8];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellRuneCostRec {
	static constexpr uint32_t NumColumns = 5;
	static constexpr uint32_t RowSize = 20;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Blood;
	int32_t m_Unholy;
	int32_t m_Frost;
	int32_t m_RunicPower;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellScalingRec {
	static constexpr uint32_t NumColumns = 16;
	static constexpr uint32_t RowSize = 64;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_CastTimeMin;
	int32_t m_CastTimeMax;
	int32_t m_CastTimeMaxLevel;
	int32_t m_Class;
	float m_Coefficient[3];
	float m_Variance[3];
	float m_ComboPointsCoefficient[3];
	float m_NerfFactor;
	int32_t m_NerfMaxLevel;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellShapeshiftRec {
	static constexpr uint32_t NumColumns = 6;
	static constexpr uint32_t RowSize = 24;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ShapeshiftExclude[2];
	int32_t m_ShapeshiftMask[2];
	int32_t m_StanceBarOrder;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellShapeshiftFormRec {
	static constexpr uint32_t NumColumns = 35;
	static constexpr uint32_t RowSize = 140;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_BonusActionBar;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	int32_t m_Flags;
	int32_t m_CreatureType;
	int32_t m_AttackIconID;
	int32_t m_CombatRoundTime;
	int32_t m_CreatureDisplayID[4];
	int32_t m_PresetSpellID[8];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellTargetRestrictionsRec {
	static constexpr uint32_t NumColumns = 5;
	static constexpr uint32_t RowSize = 20;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_MaxTargets;
	int32_t m_MaxTargetLevel;
	int32_t m_TargetCreatureType;
	int32_t m_Targets;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellTotemsRec {
	static constexpr uint32_t NumColumns = 5;
	static constexpr uint32_t RowSize = 20;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_RequiredTotemCategoryID[2];
	int32_t m_Totem[2];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellVisualRec {
	static constexpr uint32_t NumColumns = 32;
	static constexpr uint32_t RowSize = 128;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_PrecastKit;
	int32_t m_CastKit;
	int32_t m_ImpactKit;
	int32_t m_StateKit;
	int32_t m_StateDoneKit;
	int32_t m_ChannelKit;
	int32_t m_HasMissile;
	int32_t m_MissileModel;
	int32_t m_MissilePathType;
	int32_t m_MissileDestinationAttachment;
	int32_t m_MissileSound;
	int32_t m_AnimEventSoundID;
	int32_t m_Flags;
	int32_t m_CasterImpactKit;
	int32_t m_TargetImpactKit;
	int32_t m_MissileAttachment;
	int32_t m_MissileFollowGroundHeight;
	int32_t m_MissileFollowGroundDropSpeed;
	int32_t m_MissileFollowGroundApproach;
	int32_t m_MissileFollowGroundFlags;
	int32_t m_MissileMotion;
	int32_t m_MissileTargetingKit;
	int32_t m_InstantAreaKit;
	int32_t m_ImpactAreaKit;
	int32_t m_PersistentAreaKit;
	float m_MissileCastOffset[3];
	float m_MissileImpactOffset[3];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellVisualEffectNameRec {
	static constexpr uint32_t NumColumns = 7;
	static constexpr uint32_t RowSize = 28;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name;
	const char* m_FileName;
	float m_AreaEffectSize;
	float m_Scale;
	float m_MinAllowedScale;
	float m_MaxAllowedScale;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellVisualKitRec {
	static constexpr uint32_t NumColumns = 38;
	static constexpr uint32_t RowSize = 152;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_StartAnimID;
	int32_t m_AnimID;
	int32_t m_HeadEffect;
	int32_t m_ChestEffect;
	int32_t m_BaseEffect;
	int32_t m_LeftHandEffect;
	int32_t m_RightHandEffect;
	int32_t m_BreathEffect;
	int32_t m_LeftWeaponEffect;
	int32_t m_RightWeaponEffect;
	int32_t m_SpecialEffect[3];
	int32_t m_WorldEffect;
	int32_t m_SoundID;
	int32_t m_ShakeID;
	int32_t m_CharProc[4];
	float m_CharParamZero[4];
	float m_CharParamOne[4];
	float m_CharParamTwo[4];
	float m_CharParamThree[4];
	int32_t m_Flags;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellVisualKitAreaModelRec {
	static constexpr uint32_t NumColumns = 3;
	static constexpr uint32_t RowSize = 12;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name;
	int32_t m_EnumID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellVisualKitModelAttachRec {
	static constexpr uint32_t NumColumns = 10;
	static constexpr uint32_t RowSize = 40;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ParentSpellVisualKitID;
	int32_t m_SpellVisualEffectNameID;
	int32_t m_AttachmentID;
	float m_Offset[3];
	float m_Yaw;
	float m_Pitch;
	float m_Roll;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SpellVisualPrecastTransitionsRec {
	static constexpr uint32_t NumColumns = 3;
	static constexpr uint32_t RowSize = 12;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_PrecastLoadAnimName;
	const char* m_PrecastHoldAnimName;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct StableSlotPricesRec {
	static constexpr uint32_t NumColumns = 2;
	static constexpr uint32_t RowSize = 8;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Cost;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct Startup_StringsRec {
	static constexpr uint32_t NumColumns = 19;
	static constexpr uint32_t RowSize = 76;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name;
	const char* m_Message_lang[16];
	uint32_t m_Message_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct StationeryRec {
	static constexpr uint32_t NumColumns = 4;
	static constexpr uint32_t RowSize = 16;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ItemID;
	const char* m_Texture;
	int32_t m_Flags;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct StringLookupsRec {
	static constexpr uint32_t NumColumns = 2;
	static constexpr uint32_t RowSize = 8;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_String;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct SummonPropertiesRec {
	static constexpr uint32_t NumColumns = 6;
	static constexpr uint32_t RowSize = 24;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Control;
	int32_t m_Faction;
	int32_t m_Title;
	int32_t m_Slot;
	int32_t m_Flags;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct TalentRec {
	static constexpr uint32_t NumColumns = 23;
	static constexpr uint32_t RowSize = 92;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_TabID;
	int32_t m_TierID;
	int32_t m_ColumnIndex;
	int32_t m_SpellRank[9];
	int32_t m_PrereqTalent[3];
	int32_t m_PrereqRank[3];
	int32_t m_Flags;
	int32_t m_RequiredSpellID;
	int32_t m_CategoryMask[2];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct TalentTabRec {
	static constexpr uint32_t NumColumns = 24;
	static constexpr uint32_t RowSize = 96;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	int32_t m_SpellIconID;
	int32_t m_RaceMask;
	int32_t m_ClassMask;
	int32_t m_CategoryEnumID;
	int32_t m_OrderIndex;
	const char* m_BackgroundFile;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct TaxiNodesRec {
	static constexpr uint32_t NumColumns = 24;
	static constexpr uint32_t RowSize = 96;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ContinentID;
	float m_Pos[3];
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	int32_t m_MountCreatureID[2];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct TaxiPathRec {
	static constexpr uint32_t NumColumns = 4;
	static constexpr uint32_t RowSize = 16;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_FromTaxiNode;
	int32_t m_ToTaxiNode;
	int32_t m_Cost;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct TaxiPathNodeRec {
	static constexpr uint32_t NumColumns = 11;
	static constexpr uint32_t RowSize = 44;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_PathID;
	int32_t m_NodeIndex;
	int32_t m_ContinentID;
	float m_Loc[3];
	int32_t m_Flags;
	int32_t m_Delay;
	int32_t m_ArrivalEventID;
	int32_t m_DepartureEventID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct TeamContributionPointsRec {
	static constexpr uint32_t NumColumns = 2;
	static constexpr uint32_t RowSize = 8;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	float m_Data;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct TerrainMaterialRec {
	static constexpr uint32_t NumColumns = 4;
	static constexpr uint32_t RowSize = 16;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name;
	int32_t m_Shader;
	const char* m_EnvMapPath;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct TerrainTypeRec {
	static constexpr uint32_t NumColumns = 6;
	static constexpr uint32_t RowSize = 24;
	static constexpr bool IndexIsID = true;

	int32_t m_TerrainID;
	const char* m_TerrainDesc;
	int32_t m_FootstepSprayRun;
	int32_t m_FootstepSprayWalk;
	int32_t m_SoundID;
	int32_t m_Flags;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct TerrainTypeSoundsRec {
	static constexpr uint32_t NumColumns = 1;
	static constexpr uint32_t RowSize = 4;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct TotemCategoryRec {
	static constexpr uint32_t NumColumns = 20;
	static constexpr uint32_t RowSize = 80;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name_lang[16];
	uint32_t m_Name_lang_bitmask;
	int32_t m_TotemCategoryType;
	int32_t m_TotemCategoryMask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct TransportAnimationRec {
	static constexpr uint32_t NumColumns = 7;
	static constexpr uint32_t RowSize = 28;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_TransportID;
	int32_t m_TimeIndex;
	float m_Pos[3];
	int32_t m_SequenceID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct TransportPhysicsRec {
	static constexpr uint32_t NumColumns = 11;
	static constexpr uint32_t RowSize = 44;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	float m_WaveAmp;
	float m_WaveTimeScale;
	float m_RollAmp;
	float m_RollTimeScale;
	float m_PitchAmp;
	float m_PitchTimeScale;
	float m_MaxBank;
	float m_MaxBankTurnSpeed;
	float m_SpeedDampThresh;
	float m_SpeedDamp;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct TransportRotationRec {
	static constexpr uint32_t NumColumns = 7;
	static constexpr uint32_t RowSize = 28;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_GameObjectsID;
	int32_t m_TimeIndex;
	float m_Rot[4];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct UISoundLookupsRec {
	static constexpr uint32_t NumColumns = 3;
	static constexpr uint32_t RowSize = 12;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_SoundID;
	const char* m_SoundName;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct UnitBloodRec {
	static constexpr uint32_t NumColumns = 10;
	static constexpr uint32_t RowSize = 40;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_CombatBloodSpurtFront[2];
	int32_t m_CombatBloodSpurtBack[2];
	const char* m_GroundBlood[5];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct UnitBloodLevelsRec {
	static constexpr uint32_t NumColumns = 4;
	static constexpr uint32_t RowSize = 16;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Violencelevel[3];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct VehicleRec {
	static constexpr uint32_t NumColumns = 40;
	static constexpr uint32_t RowSize = 160;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Flags;
	float m_TurnSpeed;
	float m_PitchSpeed;
	float m_PitchMin;
	float m_PitchMax;
	int32_t m_SeatID[8];
	float m_MouseLookOffsetPitch;
	float m_CameraFadeDistScalarMin;
	float m_CameraFadeDistScalarMax;
	float m_CameraPitchOffset;
	float m_FacingLimitRight;
	float m_FacingLimitLeft;
	float m_MsslTrgtTurnLingering;
	float m_MsslTrgtPitchLingering;
	float m_MsslTrgtMouseLingering;
	float m_MsslTrgtEndOpacity;
	float m_MsslTrgtArcSpeed;
	float m_MsslTrgtArcRepeat;
	float m_MsslTrgtArcWidth;
	float m_MsslTrgtImpactRadius[2];
	const char* m_MsslTrgtArcTexture;
	const char* m_MsslTrgtImpactTexture;
	const char* m_MsslTrgtImpactModel[2];
	float m_CameraYawOffset;
	int32_t m_UiLocomotionType;
	float m_MsslTrgtImpactTexRadius;
	int32_t m_VehicleUIIndicatorID;
	int32_t m_PowerDisplayID[3];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct VehicleSeatRec {
	static constexpr uint32_t NumColumns = 58;
	static constexpr uint32_t RowSize = 232;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	float m_Field_3_3_5_12213_001;
	int32_t m_AttachmentID;
	float m_AttachmentOffset[3];
	float m_Field_3_3_5_12213_004;
	float m_EnterSpeed;
	float m_EnterGravity;
	float m_EnterMinDuration;
	float m_EnterMaxDuration;
	float m_EnterMinArcHeight;
	float m_EnterMaxArcHeight;
	int32_t m_EnterAnimStart;
	int32_t m_EnterAnimLoop;
	int32_t m_RideAnimStart;
	int32_t m_RideAnimLoop;
	int32_t m_RideUpperAnimStart;
	int32_t m_RideUpperAnimLoop;
	float m_Field_3_3_5_12213_017;
	float m_ExitSpeed;
	float m_ExitGravity;
	float m_ExitMinDuration;
	float m_ExitMaxDuration;
	float m_ExitMinArcHeight;
	float m_ExitMaxArcHeight;
	int32_t m_ExitAnimStart;
	int32_t m_ExitAnimLoop;
	int32_t m_ExitAnimEnd;
	float m_Field_3_3_5_12213_027;
	float m_PassengerPitch;
	float m_Field_3_3_5_12213_029;
	int32_t m_PassengerAttachmentID;
	int32_t m_VehicleEnterAnim;
	int32_t m_VehicleExitAnim;
	int32_t m_VehicleRideAnimLoop;
	int32_t m_Field_3_3_5_12213_034;
	int32_t m_VehicleExitAnimBone;
	int32_t m_VehicleEnterAnimBone;
	float m_Field_3_3_5_12213_037;
	float m_Field_3_3_5_12213_038;
	int32_t m_VehicleAbilityDisplay;
	int32_t m_EnterUISoundID;
	int32_t m_Field_3_3_5_12213_041;
	int32_t m_UiSkin;
	float m_Field_3_3_5_12213_043;
	float m_Field_3_3_5_12213_044;
	float m_Field_3_3_5_12213_045;
	int32_t m_Field_3_3_5_12213_046;
	float m_Field_3_3_5_12213_047;
	float m_Field_3_3_5_12213_048;
	float m_Field_3_3_5_12213_049;
	float m_Field_3_3_5_12213_050;
	float m_Field_3_3_5_12213_051;
	float m_Field_3_3_5_12213_052;
	float m_Field_3_3_5_12213_053;
	float m_Field_3_3_5_12213_054;
	float m_Field_3_3_5_12213_055;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct VehicleUIIndSeatRec {
	static constexpr uint32_t NumColumns = 5;
	static constexpr uint32_t RowSize = 20;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_VehicleUIIndicatorID;
	int32_t m_VirtualSeatIndex;
	float m_XPos;
	float m_YPos;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct VehicleUIIndicatorRec {
	static constexpr uint32_t NumColumns = 2;
	static constexpr uint32_t RowSize = 8;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_BackgroundTexture;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct VideoHardwareRec {
	static constexpr uint32_t NumColumns = 23;
	static constexpr uint32_t RowSize = 92;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_VendorID;
	int32_t m_DeviceID;
	int32_t m_FarclipIdx;
	int32_t m_TerrainLODDistIdx;
	int32_t m_TerrainShadowLOD;
	int32_t m_DetailDoodadDensityIdx;
	int32_t m_DetailDoodadAlpha;
	int32_t m_AnimatingDoodadIdx;
	int32_t m_Trilinear;
	int32_t m_NumLights;
	int32_t m_Specularity;
	int32_t m_WaterLODIdx;
	int32_t m_ParticleDensityIdx;
	int32_t m_UnitDrawDistIdx;
	int32_t m_SmallCullDistIdx;
	int32_t m_ResolutionIdx;
	int32_t m_BaseMipLevel;
	const char* m_OglOverrides;
	const char* m_D3dOverrides;
	int32_t m_FixLag;
	int32_t m_Multisample;
	int32_t m_Atlasdisable;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct VocalUISoundsRec {
	static constexpr uint32_t NumColumns = 7;
	static constexpr uint32_t RowSize = 28;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_VocalUIEnum;
	int32_t m_RaceID;
	int32_t m_NormalSoundID[2];
	int32_t m_PissedSoundID[2];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct WMOAreaTableRec {
	static constexpr uint32_t NumColumns = 28;
	static constexpr uint32_t RowSize = 112;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_WMOID;
	int32_t m_NameSetID;
	int32_t m_WMOGroupID;
	int32_t m_SoundProviderPref;
	int32_t m_SoundProviderPrefUnderwater;
	int32_t m_AmbienceID;
	int32_t m_ZoneMusic;
	int32_t m_IntroSound;
	int32_t m_Flags;
	int32_t m_AreaTableID;
	const char* m_AreaName_lang[16];
	uint32_t m_AreaName_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct WeaponImpactSoundsRec {
	static constexpr uint32_t NumColumns = 23;
	static constexpr uint32_t RowSize = 92;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_WeaponSubClassID;
	int32_t m_ParrySoundType;
	int32_t m_ImpactSoundID[10];
	int32_t m_CritImpactSoundID[10];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct WeaponSwingSounds2Rec {
	static constexpr uint32_t NumColumns = 4;
	static constexpr uint32_t RowSize = 16;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_SwingType;
	int32_t m_Crit;
	int32_t m_SoundID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct WeatherRec {
	static constexpr uint32_t NumColumns = 8;
	static constexpr uint32_t RowSize = 32;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_AmbienceID;
	int32_t m_EffectType;
	float m_TransitionSkyBox;
	float m_EffectColor[3];
	const char* m_EffectTexture;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct WorldChunkSoundsRec {
	static constexpr uint32_t NumColumns = 9;
	static constexpr uint32_t RowSize = 36;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ChunkX;
	int32_t m_ChunkY;
	int32_t m_SubchunkX;
	int32_t m_SubchunkY;
	int32_t m_ZoneIntroMusicID;
	int32_t m_ZoneMusicID;
	int32_t m_SoundAmbienceID;
	int32_t m_SoundProviderPreferencesID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct WorldMapAreaRec {
	static constexpr uint32_t NumColumns = 11;
	static constexpr uint32_t RowSize = 44;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_MapID;
	int32_t m_AreaID;
	const char* m_AreaName;
	float m_LocLeft;
	float m_LocRight;
	float m_LocTop;
	float m_LocBottom;
	int32_t m_DisplayMapID;
	int32_t m_DefaultDungeonFloor;
	int32_t m_ParentWorldMapID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct WorldMapContinentRec {
	static constexpr uint32_t NumColumns = 14;
	static constexpr uint32_t RowSize = 56;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_MapID;
	int32_t m_LeftBoundary;
	int32_t m_RightBoundary;
	int32_t m_TopBoundary;
	int32_t m_BottomBoundary;
	float m_ContinentOffset[2];
	float m_Scale;
	float m_TaxiMin[2];
	float m_TaxiMax[2];
	int32_t m_WorldMapID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct WorldMapOverlayRec {
	static constexpr uint32_t NumColumns = 17;
	static constexpr uint32_t RowSize = 68;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_MapAreaID;
	int32_t m_AreaID[4];
	int32_t m_MapPointX;
	int32_t m_MapPointY;
	const char* m_TextureName;
	int32_t m_TextureWidth;
	int32_t m_TextureHeight;
	int32_t m_OffsetX;
	int32_t m_OffsetY;
	int32_t m_HitRectTop;
	int32_t m_HitRectLeft;
	int32_t m_HitRectBottom;
	int32_t m_HitRectRight;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct WorldMapTransformsRec {
	static constexpr uint32_t NumColumns = 10;
	static constexpr uint32_t RowSize = 40;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_MapID;
	float m_RegionMin[2];
	float m_RegionMax[2];
	int32_t m_NewMapID;
	float m_RegionOffset[2];
	int32_t m_NewDungeonMapID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct WorldSafeLocsRec {
	static constexpr uint32_t NumColumns = 22;
	static constexpr uint32_t RowSize = 88;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_Continent;
	float m_Loc[3];
	const char* m_AreaName_lang[16];
	uint32_t m_AreaName_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct WorldStateUIRec {
	static constexpr uint32_t NumColumns = 63;
	static constexpr uint32_t RowSize = 252;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_MapID;
	int32_t m_AreaID;
	int32_t m_PhaseShift;
	const char* m_Icon;
	const char* m_String_lang[16];
	uint32_t m_String_lang_bitmask;
	const char* m_Tooltip_lang[16];
	uint32_t m_Tooltip_lang_bitmask;
	int32_t m_StateVariable;
	int32_t m_Type;
	const char* m_DynamicIcon;
	const char* m_DynamicTooltip_lang[16];
	uint32_t m_DynamicTooltip_lang_bitmask;
	const char* m_ExtendedUI;
	int32_t m_ExtendedUIStateVariable[3];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct WorldStateZoneSoundsRec {
	static constexpr uint32_t NumColumns = 8;
	static constexpr uint32_t RowSize = 32;
	static constexpr bool IndexIsID = true;

	int32_t m_WorldStateID;
	int32_t m_WorldStateValue;
	int32_t m_AreaID;
	int32_t m_WMOAreaID;
	int32_t m_ZoneIntroMusicID;
	int32_t m_ZoneMusicID;
	int32_t m_SoundAmbienceID;
	int32_t m_SoundProviderPreferencesID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct WowError_StringsRec {
	static constexpr uint32_t NumColumns = 19;
	static constexpr uint32_t RowSize = 76;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name;
	const char* m_Description_lang[16];
	uint32_t m_Description_lang_bitmask;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ZoneIntroMusicTableRec {
	static constexpr uint32_t NumColumns = 5;
	static constexpr uint32_t RowSize = 20;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name;
	int32_t m_SoundID;
	int32_t m_Priority;
	int32_t m_MinDelayMinutes;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ZoneLightRec {
	static constexpr uint32_t NumColumns = 4;
	static constexpr uint32_t RowSize = 16;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_Name;
	int32_t m_MapID;
	int32_t m_LightID;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ZoneLightPointRec {
	static constexpr uint32_t NumColumns = 5;
	static constexpr uint32_t RowSize = 20;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	int32_t m_ZoneLightID;
	float m_Pos[2];
	int32_t m_PointOrder;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct ZoneMusicRec {
	static constexpr uint32_t NumColumns = 8;
	static constexpr uint32_t RowSize = 32;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	const char* m_SetName;
	int32_t m_SilenceIntervalMin[2];
	int32_t m_SilenceIntervalMax[2];
	int32_t m_Sounds[2];

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct gtBarberShopCostBaseRec {
	static constexpr uint32_t NumColumns = 1;
	static constexpr uint32_t RowSize = 4;
	static constexpr bool IndexIsID = true;

	float m_Data;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct gtChanceToMeleeCritRec {
	static constexpr uint32_t NumColumns = 1;
	static constexpr uint32_t RowSize = 4;
	static constexpr bool IndexIsID = true;

	float m_Data;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct gtChanceToMeleeCritBaseRec {
	static constexpr uint32_t NumColumns = 1;
	static constexpr uint32_t RowSize = 4;
	static constexpr bool IndexIsID = true;

	float m_Data;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct gtChanceToSpellCritRec {
	static constexpr uint32_t NumColumns = 1;
	static constexpr uint32_t RowSize = 4;
	static constexpr bool IndexIsID = true;

	float m_Data;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct gtChanceToSpellCritBaseRec {
	static constexpr uint32_t NumColumns = 1;
	static constexpr uint32_t RowSize = 4;
	static constexpr bool IndexIsID = true;

	float m_Data;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct gtCombatRatingsRec {
	static constexpr uint32_t NumColumns = 1;
	static constexpr uint32_t RowSize = 4;
	static constexpr bool IndexIsID = true;

	float m_Data;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct gtNPCManaCostScalerRec {
	static constexpr uint32_t NumColumns = 1;
	static constexpr uint32_t RowSize = 4;
	static constexpr bool IndexIsID = true;

	float m_Data;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct gtOCTClassCombatRatingScalarRec {
	static constexpr uint32_t NumColumns = 2;
	static constexpr uint32_t RowSize = 8;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	float m_Data;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct gtOCTRegenHPRec {
	static constexpr uint32_t NumColumns = 1;
	static constexpr uint32_t RowSize = 4;
	static constexpr bool IndexIsID = true;

	float m_Data;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct gtOCTRegenMPRec {
	static constexpr uint32_t NumColumns = 1;
	static constexpr uint32_t RowSize = 4;
	static constexpr bool IndexIsID = true;

	float m_Data;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct gtRegenHPPerSptRec {
	static constexpr uint32_t NumColumns = 1;
	static constexpr uint32_t RowSize = 4;
	static constexpr bool IndexIsID = true;

	float m_Data;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct gtRegenMPPerSptRec {
	static constexpr uint32_t NumColumns = 1;
	static constexpr uint32_t RowSize = 4;
	static constexpr bool IndexIsID = true;

	float m_Data;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};

struct gtSpellScalingRec {
	static constexpr uint32_t NumColumns = 2;
	static constexpr uint32_t RowSize = 8;
	static constexpr bool IndexIsID = false;

	int32_t m_ID;
	float m_Data;

	const char * GetFilename();
	bool Read(SFile* f, const char* stringBuffer);
};


#endif