// DO NOT EDIT: generated by whoa_autocode

#include "db/ClientDefs.hpp"

bool CharSectionsRec::Read(SFile* f, const char* stringBuffer) {
	uint32_t tempTextureNameIndices[3];
	if (
		SFile::Read(f, &m_ID, sizeof(m_ID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_RaceID, sizeof(m_RaceID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_SexID, sizeof(m_SexID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_BaseSection, sizeof(m_BaseSection), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempTextureNameIndices[0], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempTextureNameIndices[1], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempTextureNameIndices[2], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Flags, sizeof(m_Flags), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_VariationIndex, sizeof(m_VariationIndex), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_ColorIndex, sizeof(m_ColorIndex), nullptr, nullptr, nullptr) == 0
	)
	{
		ConsoleWrite("Error reading CharSections", WARNING_COLOR);
		return false;
	}
	if (stringBuffer) {
		m_TextureName[0] = &stringBuffer[tempTextureNameIndices[0]];
		m_TextureName[1] = &stringBuffer[tempTextureNameIndices[1]];
		m_TextureName[2] = &stringBuffer[tempTextureNameIndices[2]];
		return true;
	}
		m_TextureName[0] = "";
		m_TextureName[1] = "";
		m_TextureName[2] = "";
	return true;
}

const char* CharSectionsRec::GetFilename() {
	return "DBFilesClient\\CharSections.dbc";
}
