// DO NOT EDIT: generated by whoa_autocode

#include "db/ClientDefs.hpp"

bool SoundEmittersRec::Read(SFile* f, const char* stringBuffer) {
	uint32_t tempNameIndices[1];
	if (
		SFile::Read(f, &m_ID, sizeof(m_ID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Position[0], sizeof(m_Position[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Position[1], sizeof(m_Position[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Position[2], sizeof(m_Position[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Direction[0], sizeof(m_Direction[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Direction[1], sizeof(m_Direction[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Direction[2], sizeof(m_Direction[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_SoundEntryAdvancedID, sizeof(m_SoundEntryAdvancedID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_MapID, sizeof(m_MapID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempNameIndices[0], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0
	)
	{
		ConsoleWrite("Error reading SoundEmitters", WARNING_COLOR);
		return false;
	}
	if (stringBuffer) {
		m_Name = &stringBuffer[tempNameIndices[0]];
		return true;
	}
	m_Name = "";
	return true;
}

const char* SoundEmittersRec::GetFilename() {
	return "DBFilesClient\\SoundEmitters.dbc";
}
