// DO NOT EDIT: generated by whoa_autocode

#include "db/ClientDefs.hpp"

bool SoundEntriesRec::Read(SFile* f, const char* stringBuffer) {
	uint32_t tempNameIndices[1];
	uint32_t tempFileIndices[10];
	uint32_t tempDirectoryBaseIndices[1];
	if (
		SFile::Read(f, &m_ID, sizeof(m_ID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_SoundType, sizeof(m_SoundType), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempNameIndices[0], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempFileIndices[0], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempFileIndices[1], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempFileIndices[2], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempFileIndices[3], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempFileIndices[4], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempFileIndices[5], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempFileIndices[6], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempFileIndices[7], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempFileIndices[8], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempFileIndices[9], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Freq[0], sizeof(m_Freq[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Freq[1], sizeof(m_Freq[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Freq[2], sizeof(m_Freq[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Freq[3], sizeof(m_Freq[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Freq[4], sizeof(m_Freq[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Freq[5], sizeof(m_Freq[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Freq[6], sizeof(m_Freq[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Freq[7], sizeof(m_Freq[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Freq[8], sizeof(m_Freq[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Freq[9], sizeof(m_Freq[0]), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempDirectoryBaseIndices[0], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_VolumeFloat, sizeof(m_VolumeFloat), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Flags, sizeof(m_Flags), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_MinDistance, sizeof(m_MinDistance), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_DistanceCutoff, sizeof(m_DistanceCutoff), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_EAXDef, sizeof(m_EAXDef), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_SoundEntriesAdvancedID, sizeof(m_SoundEntriesAdvancedID), nullptr, nullptr, nullptr) == 0
	)
	{
		ConsoleWrite("Error reading SoundEntries", WARNING_COLOR);
		return false;
	}
	if (stringBuffer) {
		m_Name = &stringBuffer[tempNameIndices[0]];
		m_File[0] = &stringBuffer[tempFileIndices[0]];
		m_File[1] = &stringBuffer[tempFileIndices[1]];
		m_File[2] = &stringBuffer[tempFileIndices[2]];
		m_File[3] = &stringBuffer[tempFileIndices[3]];
		m_File[4] = &stringBuffer[tempFileIndices[4]];
		m_File[5] = &stringBuffer[tempFileIndices[5]];
		m_File[6] = &stringBuffer[tempFileIndices[6]];
		m_File[7] = &stringBuffer[tempFileIndices[7]];
		m_File[8] = &stringBuffer[tempFileIndices[8]];
		m_File[9] = &stringBuffer[tempFileIndices[9]];
		m_DirectoryBase = &stringBuffer[tempDirectoryBaseIndices[0]];
		return true;
	}
		m_File[0] = "";
		m_File[1] = "";
		m_File[2] = "";
		m_File[3] = "";
		m_File[4] = "";
		m_File[5] = "";
		m_File[6] = "";
		m_File[7] = "";
		m_File[8] = "";
		m_File[9] = "";
	return true;
}

const char* SoundEntriesRec::GetFilename() {
	return "DBFilesClient\\SoundEntries.dbc";
}
