// DO NOT EDIT: generated by whoa_autocode

#include "db/ClientDefs.hpp"

bool CreatureDisplayInfoRec::Read(SFile* f, const char* stringBuffer) {
	uint32_t tempTextureVariationIndices[3];
	uint32_t tempPortraitTextureNameIndices[1];
	if (
		SFile::Read(f, &m_ID, sizeof(m_ID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_ModelID, sizeof(m_ModelID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_SoundID, sizeof(m_SoundID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_ExtendedDisplayInfoID, sizeof(m_ExtendedDisplayInfoID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_CreatureModelScale, sizeof(m_CreatureModelScale), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_CreatureModelAlpha, sizeof(m_CreatureModelAlpha), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempTextureVariationIndices[0], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempTextureVariationIndices[1], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempTextureVariationIndices[2], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempPortraitTextureNameIndices[0], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_SizeClass, sizeof(m_SizeClass), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_BloodID, sizeof(m_BloodID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_NPCSoundID, sizeof(m_NPCSoundID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_ParticleColorID, sizeof(m_ParticleColorID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_CreatureGeosetData, sizeof(m_CreatureGeosetData), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_ObjectEffectPackageID, sizeof(m_ObjectEffectPackageID), nullptr, nullptr, nullptr) == 0
	)
	{
		ConsoleWrite("Error reading CreatureDisplayInfo", WARNING_COLOR);
		return false;
	}
	if (stringBuffer) {
		m_TextureVariation[0] = &stringBuffer[tempTextureVariationIndices[0]];
		m_TextureVariation[1] = &stringBuffer[tempTextureVariationIndices[1]];
		m_TextureVariation[2] = &stringBuffer[tempTextureVariationIndices[2]];
		m_PortraitTextureName = &stringBuffer[tempPortraitTextureNameIndices[0]];
		return true;
	}
	m_TextureVariation[0] = "";
	m_TextureVariation[1] = "";
	m_TextureVariation[2] = "";
	m_PortraitTextureName = "";
	return true;
}

const char* CreatureDisplayInfoRec::GetFilename() {
	return "DBFilesClient\\CreatureDisplayInfo.dbc";
}
