// DO NOT EDIT: generated by whoa_autocode

#include "db/ClientDefs.hpp"

bool GMSurveyAnswersRec::Read(SFile* f, const char* stringBuffer) {
	uint32_t tempAnswer_langIndices[16];
	if (
		SFile::Read(f, &m_ID, sizeof(m_ID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Sort_Index, sizeof(m_Sort_Index), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_GMSurveyQuestionID, sizeof(m_GMSurveyQuestionID), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempAnswer_langIndices[0], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempAnswer_langIndices[1], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempAnswer_langIndices[2], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempAnswer_langIndices[3], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempAnswer_langIndices[4], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempAnswer_langIndices[5], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempAnswer_langIndices[6], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempAnswer_langIndices[7], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempAnswer_langIndices[8], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempAnswer_langIndices[9], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempAnswer_langIndices[10], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempAnswer_langIndices[11], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempAnswer_langIndices[12], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempAnswer_langIndices[13], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempAnswer_langIndices[14], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &tempAnswer_langIndices[15], sizeof(uint32_t), nullptr, nullptr, nullptr) == 0 ||
		SFile::Read(f, &m_Answer_lang_bitmask, sizeof(uint32_t), nullptr, nullptr, nullptr) == 0
	)
	{
		ConsoleWrite("Error reading GMSurveyAnswers", WARNING_COLOR);
		return false;
	}
	if (stringBuffer) {
		m_Answer_lang[0] = &stringBuffer[tempAnswer_langIndices[0]];
		m_Answer_lang[1] = &stringBuffer[tempAnswer_langIndices[1]];
		m_Answer_lang[2] = &stringBuffer[tempAnswer_langIndices[2]];
		m_Answer_lang[3] = &stringBuffer[tempAnswer_langIndices[3]];
		m_Answer_lang[4] = &stringBuffer[tempAnswer_langIndices[4]];
		m_Answer_lang[5] = &stringBuffer[tempAnswer_langIndices[5]];
		m_Answer_lang[6] = &stringBuffer[tempAnswer_langIndices[6]];
		m_Answer_lang[7] = &stringBuffer[tempAnswer_langIndices[7]];
		m_Answer_lang[8] = &stringBuffer[tempAnswer_langIndices[8]];
		m_Answer_lang[9] = &stringBuffer[tempAnswer_langIndices[9]];
		m_Answer_lang[10] = &stringBuffer[tempAnswer_langIndices[10]];
		m_Answer_lang[11] = &stringBuffer[tempAnswer_langIndices[11]];
		m_Answer_lang[12] = &stringBuffer[tempAnswer_langIndices[12]];
		m_Answer_lang[13] = &stringBuffer[tempAnswer_langIndices[13]];
		m_Answer_lang[14] = &stringBuffer[tempAnswer_langIndices[14]];
		m_Answer_lang[15] = &stringBuffer[tempAnswer_langIndices[15]];
		return true;
	}
	m_Answer_lang[0] = "";
	m_Answer_lang[1] = "";
	m_Answer_lang[2] = "";
	m_Answer_lang[3] = "";
	m_Answer_lang[4] = "";
	m_Answer_lang[5] = "";
	m_Answer_lang[6] = "";
	m_Answer_lang[7] = "";
	m_Answer_lang[8] = "";
	m_Answer_lang[9] = "";
	m_Answer_lang[10] = "";
	m_Answer_lang[11] = "";
	m_Answer_lang[12] = "";
	m_Answer_lang[13] = "";
	m_Answer_lang[14] = "";
	m_Answer_lang[15] = "";
	return true;
}

const char* GMSurveyAnswersRec::GetFilename() {
	return "DBFilesClient\\GMSurveyAnswers.dbc";
}
